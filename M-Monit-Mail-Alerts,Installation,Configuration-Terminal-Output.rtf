{\rtf1\ansi\ansicpg1252\deff0\deflang1033{\fonttbl{\f0\fmodern Consolas;}{\f1\fmodern\fcharset0 Consolas;}{\f2\fnil\fcharset129 Courier New;}}
{\colortbl ;\red20\green20\blue20;\red142\green142\blue142;\red16\green158\blue98;\red148\green146\blue12;\red170\green51\blue170;\red56\green136\blue159;\red18\green18\blue18;\red245\green245\blue245;\red18\green124\blue155;}
\viewkind4\uc1\pard\f0\fs20 Authenticating with public key "Imported-Openssh-Key"\cf1\highlight2 
\par \cf0\highlight0     \u9484?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9488?\cf1\highlight2 
\par \cf0\highlight0     \u9474?                 \cf3\f1\bullet  MobaXterm Personal Edition v24.1 \bullet\cf0\f0                  \u9474?\cf1\highlight2 
\par \cf0\highlight0     \u9474?               \cf4 (SSH client, X server and network tools)\cf0                \u9474?\cf1\highlight2 
\par \cf0\highlight0     \u9474?                                                                      \u9474?\cf1\highlight2 
\par \cf0\highlight0     \u9474? \u11166? SSH session to \cf5 ubuntu@65.1.95.198                        \cf0           \u9474?\cf1\highlight2 
\par \cf0\highlight0     \u9474?\f1    \bullet  Direct SSH      :  \cf3\f0\u10003?\cf0                                              \u9474?\cf1\highlight2 
\par \cf0\highlight0     \u9474?\f1    \bullet  SSH compression :  \cf3\f0\u10003?\cf0                                              \u9474?\cf1\highlight2 
\par \cf0\highlight0     \u9474?\f1    \bullet  SSH-browser     :  \cf3\f0\u10003?\cf0                                              \u9474?\cf1\highlight2 
\par \cf0\highlight0     \u9474?\f1    \bullet  X11-forwarding  :  \cf3\f0\u10003?\cf0   (remote display is forwarded through SSH)  \u9474?\cf1\highlight2 
\par \cf0\highlight0     \u9474?                                                                      \u9474?\cf1\highlight2 
\par \cf0\highlight0     \u9474? \u11166? For more info, ctrl+click on \cf6\ul help\cf0\ulnone  or visit our \cf6\ul website\cf0\ulnone .            \u9474?\cf1\highlight2 
\par \cf0\highlight0     \u9492?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9496?\cf1\highlight2 
\par 
\par \cf0\highlight0 Welcome to Ubuntu 22.04.5 LTS (GNU/Linux 6.8.0-1021-aws x86_64)\cf1\highlight2 
\par 
\par \cf0\highlight0  * Documentation:  https://help.ubuntu.com\cf1\highlight2 
\par \cf0\highlight0  * Management:     https://landscape.canonical.com\cf1\highlight2 
\par \cf0\highlight0  * Support:        https://ubuntu.com/pro\cf1\highlight2 
\par 
\par \cf0\highlight0  System information as of Thu Feb 20 09:48:01 UTC 2025\cf1\highlight2 
\par 
\par \cf0\highlight0   System load:  0.82              Processes:             115\cf1\highlight2 
\par \cf0\highlight0   Usage of /:   21.6% of 7.57GB   Users logged in:       0\cf1\highlight2 
\par \cf0\highlight0   Memory usage: 24%               IPv4 address for eth0: 172.31.6.26\cf1\highlight2 
\par \cf0\highlight0   Swap usage:   0%\cf1\highlight2 
\par 
\par \cf0\highlight0 Expanded Security Maintenance for Applications is not enabled.\cf1\highlight2 
\par 
\par \cf0\highlight0 0 updates can be applied immediately.\cf1\highlight2 
\par 
\par \cf0\highlight0 Enable ESM Apps to receive additional future security updates.\cf1\highlight2 
\par \cf0\highlight0 See https://ubuntu.com/esm or run: sudo pro status\cf1\highlight2 
\par 
\par 
\par \cf0\highlight0 The list of available updates is more than a week old.\cf1\highlight2 
\par \cf0\highlight0 To check for new updates run: sudo apt update\cf1\highlight2 
\par 
\par 
\par \cf0\highlight0 The programs included with the Ubuntu system are free software;\cf1\highlight2 
\par \cf0\highlight0 the exact distribution terms for each program are described in the\cf1\highlight2 
\par \cf0\highlight0 individual files in /usr/share/doc/*/copyright.\cf1\highlight2 
\par 
\par \cf0\highlight0 Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by\cf1\highlight2 
\par \cf0\highlight0 applicable law.\cf1\highlight2 
\par 
\par \cf0\highlight0 /usr/bin/xauth:  file /home/ubuntu/.Xauthority does not exist\cf1\highlight2 
\par \cf0\highlight0 To run a command as administrator (user "root"), use "sudo <command>".\cf1\highlight2 
\par \cf0\highlight0 See "man sudo_root" for details.\cf1\highlight2 
\par 
\par \cf0\highlight0 ubuntu@ip-172-31-6-26:~$ sudo su -\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:~# apt update\cf1\highlight2 
\par \cf0\highlight0 Hit:1 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy InRelease\cf1\highlight2 
\par \cf0\highlight0 Get:2 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy-updates InRelease [128 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:3 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy-backports InRelease [127 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:4 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy/universe amd64 Packages [14.1 MB]\cf1\highlight2 
\par \cf0\highlight0 Get:5 http://security.ubuntu.com/ubuntu jammy-security InRelease [129 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:6 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy/universe Translation-en [5652 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:7 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy/universe amd64 c-n-f Metadata [286 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:8 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy/multiverse amd64 Packages [217 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:9 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy/multiverse Translation-en [112 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:10 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy/multiverse amd64 c-n-f Metadata [8372 B]\cf1\highlight2 
\par \cf0\highlight0 Get:11 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy-updates/main amd64 Packages [2339 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:12 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy-updates/main Translation-en [389 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:13 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy-updates/restricted amd64 Packages [2980 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:14 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy-updates/restricted Translation-en [521 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:15 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy-updates/universe amd64 Packages [1187 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:16 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy-updates/universe Translation-en [291 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:17 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy-updates/universe amd64 c-n-f Metadata [26.4 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:18 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy-updates/multiverse amd64 Packages [44.5 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:19 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy-updates/multiverse Translation-en [11.5 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:20 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy-updates/multiverse amd64 c-n-f Metadata [440 B]\cf1\highlight2 
\par \cf0\highlight0 Get:21 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy-backports/main amd64 Packages [67.7 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:22 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy-backports/main Translation-en [11.1 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:23 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy-backports/main amd64 c-n-f Metadata [388 B]\cf1\highlight2 
\par \cf0\highlight0 Get:24 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy-backports/restricted amd64 c-n-f Metadata [116 B]\cf1\highlight2 
\par \cf0\highlight0 Get:25 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy-backports/universe amd64 Packages [30.0 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:26 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy-backports/universe Translation-en [16.6 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:27 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy-backports/universe amd64 c-n-f Metadata [672 B]\cf1\highlight2 
\par \cf0\highlight0 Get:28 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy-backports/multiverse amd64 c-n-f Metadata [116 B]\cf1\highlight2 
\par \cf0\highlight0 Get:29 http://security.ubuntu.com/ubuntu jammy-security/main amd64 Packages [2080 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:30 http://security.ubuntu.com/ubuntu jammy-security/main Translation-en [326 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:31 http://security.ubuntu.com/ubuntu jammy-security/restricted amd64 Packages [2839 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:32 http://security.ubuntu.com/ubuntu jammy-security/restricted Translation-en [497 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:33 http://security.ubuntu.com/ubuntu jammy-security/universe amd64 Packages [962 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:34 http://security.ubuntu.com/ubuntu jammy-security/universe Translation-en [205 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:35 http://security.ubuntu.com/ubuntu jammy-security/universe amd64 c-n-f Metadata [19.5 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:36 http://security.ubuntu.com/ubuntu jammy-security/multiverse amd64 Packages [37.6 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:37 http://security.ubuntu.com/ubuntu jammy-security/multiverse Translation-en [8260 B]\cf1\highlight2 
\par \cf0\highlight0 Get:38 http://security.ubuntu.com/ubuntu jammy-security/multiverse amd64 c-n-f Metadata [224 B]\cf1\highlight2 
\par \cf0\highlight0 Fetched 35.6 MB in 52s (684 kB/s)\cf1\highlight2 
\par \cf0\highlight0 Reading package lists... Done\cf1\highlight2 
\par \cf0\highlight0 Building dependency tree... Done\cf1\highlight2 
\par \cf0\highlight0 Reading state information... Done\cf1\highlight2 
\par \cf0\highlight0 40 packages can be upgraded. Run 'apt list --upgradable' to see them.\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:~# sudo apt install monit -y\cf1\highlight2 
\par \cf0\highlight0 Reading package lists... Done\cf1\highlight2 
\par \cf0\highlight0 Building dependency tree... Done\cf1\highlight2 
\par \cf0\highlight0 Reading state information... Done\cf1\highlight2 
\par \cf0\highlight0 Suggested packages:\cf1\highlight2 
\par \cf0\highlight0   default-mta | postfix | mail-transport-agent sysvinit-core\cf1\highlight2 
\par \cf0\highlight0 The following NEW packages will be installed:\cf1\highlight2 
\par \cf0\highlight0   monit\cf1\highlight2 
\par \cf0\highlight0 0 upgraded, 1 newly installed, 0 to remove and 40 not upgraded.\cf1\highlight2 
\par \cf0\highlight0 Need to get 399 kB of archives.\cf1\highlight2 
\par \cf0\highlight0 After this operation, 1100 kB of additional disk space will be used.\cf1\highlight2 
\par \cf0\highlight0 Get:1 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy/universe amd64 monit amd64 1:5.31.0-1 [399 kB]\cf1\highlight2 
\par \cf0\highlight0 Fetched 399 kB in 1s (787 kB/s)\cf1\highlight2 
\par \cf0\highlight0 Selecting previously unselected package monit.\cf1\highlight2 
\par \cf0\highlight0 (Reading database ... 65853 files and directories currently installed.)\cf1\highlight2 
\par \cf0\highlight0 Preparing to unpack .../monit_1%3a5.31.0-1_amd64.deb ...\cf1\highlight2 
\par \cf0\highlight0 Unpacking monit (1:5.31.0-1) ...\cf1\highlight2 
\par \cf0\highlight0 Setting up monit (1:5.31.0-1) ...\cf1\highlight2 
\par \cf0\highlight0 Processing triggers for man-db (2.10.2-1) ...\cf1\highlight2 
\par \cf0\highlight0 Scanning processes...\cf1\highlight2 
\par \cf0\highlight0 Scanning linux images...\cf1\highlight2 
\par 
\par \cf0\highlight0 Running kernel seems to be up-to-date.\cf1\highlight2 
\par 
\par \cf0\highlight0 No services need to be restarted.\cf1\highlight2 
\par 
\par \cf0\highlight0 No containers need to be restarted.\cf1\highlight2 
\par 
\par \cf0\highlight0 No user sessions are running outdated binaries.\cf1\highlight2 
\par 
\par \cf0\highlight0 No VM guests are running outdated hypervisor (qemu) binaries on this host.\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:~# sudo systemctl status monit.service\cf1\highlight2 
\par \cf3\highlight0\u9679?\cf0  monit.service - LSB: service and resource monitoring daemon\cf1\highlight2 
\par \cf0\highlight0      Loaded: loaded (/etc/init.d/monit; generated)\cf1\highlight2 
\par \cf0\highlight0      Active: \cf3 active (running)\cf0  since Thu 2025-02-20 09:49:14 UTC; 10s ago\cf1\highlight2 
\par \cf0\highlight0        Docs: man:systemd-sysv-generator(8)\cf1\highlight2 
\par \cf0\highlight0     Process: 2404 ExecStart=/etc/init.d/monit start (code=exited, status=0/SUCCESS)\cf1\highlight2 
\par \cf0\highlight0       Tasks: 1 (limit: 1130)\cf1\highlight2 
\par \cf0\highlight0      Memory: 2.3M\cf1\highlight2 
\par \cf0\highlight0         CPU: 19ms\cf1\highlight2 
\par \cf0\highlight0      CGroup: /system.slice/monit.service\cf1\highlight2 
\par \cf0\highlight0              \u9492?\u9472?2410 /usr/bin/monit -c /etc/monit/monitrc\cf1\highlight2 
\par 
\par \cf0\highlight0 Feb 20 09:49:14 ip-172-31-6-26 systemd[1]: Starting LSB: service and resource monitorin\cf7\highlight8 >\cf1\highlight2 
\par \cf0\highlight0 Feb 20 09:49:14 ip-172-31-6-26 monit[2404]:  * Starting daemon monitor monit\cf1\highlight2 
\par \cf0\highlight0 Feb 20 09:49:14 ip-172-31-6-26 monit[2404]:    ...done.\cf1\highlight2 
\par \cf0\highlight0 Feb 20 09:49:14 ip-172-31-6-26 systemd[1]: Started LSB: service and resource monitoring\cf7\highlight8 >\cf1\highlight2 
\par 
\par \cf0\highlight0 root@ip-172-31-6-26:~# cd /etc/monit/\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# vi monitrc\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# monit -t\cf1\highlight2 
\par \cf0\highlight0 Control file syntax OK\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# monit reload\cf1\highlight2 
\par \cf0\highlight0 Reinitializing monit daemon\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# apt install nginx\cf1\highlight2 
\par \cf0\highlight0 Reading package lists... Done\cf1\highlight2 
\par \cf0\highlight0 Building dependency tree... Done\cf1\highlight2 
\par \cf0\highlight0 Reading state information... Done\cf1\highlight2 
\par \cf0\highlight0 The following additional packages will be installed:\cf1\highlight2 
\par \cf0\highlight0   fontconfig-config fonts-dejavu-core libdeflate0 libfontconfig1 libgd3 libjbig0\cf1\highlight2 
\par \cf0\highlight0   libjpeg-turbo8 libjpeg8 libnginx-mod-http-geoip2 libnginx-mod-http-image-filter\cf1\highlight2 
\par \cf0\highlight0   libnginx-mod-http-xslt-filter libnginx-mod-mail libnginx-mod-stream\cf1\highlight2 
\par \cf0\highlight0   libnginx-mod-stream-geoip2 libtiff5 libwebp7 libxpm4 nginx-common nginx-core\cf1\highlight2 
\par \cf0\highlight0 Suggested packages:\cf1\highlight2 
\par \cf0\highlight0   libgd-tools fcgiwrap nginx-doc ssl-cert\cf1\highlight2 
\par \cf0\highlight0 The following NEW packages will be installed:\cf1\highlight2 
\par \cf0\highlight0   fontconfig-config fonts-dejavu-core libdeflate0 libfontconfig1 libgd3 libjbig0\cf1\highlight2 
\par \cf0\highlight0   libjpeg-turbo8 libjpeg8 libnginx-mod-http-geoip2 libnginx-mod-http-image-filter\cf1\highlight2 
\par \cf0\highlight0   libnginx-mod-http-xslt-filter libnginx-mod-mail libnginx-mod-stream\cf1\highlight2 
\par \cf0\highlight0   libnginx-mod-stream-geoip2 libtiff5 libwebp7 libxpm4 nginx nginx-common nginx-core\cf1\highlight2 
\par \cf0\highlight0 0 upgraded, 20 newly installed, 0 to remove and 40 not upgraded.\cf1\highlight2 
\par \cf0\highlight0 Need to get 2693 kB of archives.\cf1\highlight2 
\par \cf0\highlight0 After this operation, 8346 kB of additional disk space will be used.\cf1\highlight2 
\par \cf0\highlight0 Do you want to continue? [Y/n] y\cf1\highlight2 
\par \cf0\highlight0 Get:1 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy/main amd64 fonts-dejavu-core all 2.37-2build1 [1041 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:2 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy/main amd64 fontconfig-config all 2.13.1-4.2ubuntu5 [29.1 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:3 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy/main amd64 libdeflate0 amd64 1.10-2 [70.9 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:4 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy/main amd64 libfontconfig1 amd64 2.13.1-4.2ubuntu5 [131 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:5 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy/main amd64 libjpeg-turbo8 amd64 2.1.2-0ubuntu1 [134 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:6 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy/main amd64 libjpeg8 amd64 8c-2ubuntu10 [2264 B]\cf1\highlight2 
\par \cf0\highlight0 Get:7 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy-updates/main amd64 libjbig0 amd64 2.1-3.1ubuntu0.22.04.1 [29.2 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:8 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy-updates/main amd64 libwebp7 amd64 1.2.2-2ubuntu0.22.04.2 [206 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:9 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy-updates/main amd64 libtiff5 amd64 4.3.0-6ubuntu0.10 [185 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:10 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy-updates/main amd64 libxpm4 amd64 1:3.5.12-1ubuntu0.22.04.2 [36.7 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:11 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy-updates/main amd64 libgd3 amd64 2.3.0-2ubuntu2.3 [129 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:12 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy-updates/main amd64 nginx-common all 1.18.0-6ubuntu14.5 [40.1 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:13 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy-updates/main amd64 libnginx-mod-http-geoip2 amd64 1.18.0-6ubuntu14.5 [12.0 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:14 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy-updates/main amd64 libnginx-mod-http-image-filter amd64 1.18.0-6ubuntu14.5 [15.5 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:15 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy-updates/main amd64 libnginx-mod-http-xslt-filter amd64 1.18.0-6ubuntu14.5 [13.8 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:16 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy-updates/main amd64 libnginx-mod-mail amd64 1.18.0-6ubuntu14.5 [45.8 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:17 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy-updates/main amd64 libnginx-mod-stream amd64 1.18.0-6ubuntu14.5 [72.8 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:18 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy-updates/main amd64 libnginx-mod-stream-geoip2 amd64 1.18.0-6ubuntu14.5 [10.1 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:19 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy-updates/main amd64 nginx-core amd64 1.18.0-6ubuntu14.5 [483 kB]\cf1\highlight2 
\par \cf0\highlight0 Get:20 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu jammy-updates/main amd64 nginx amd64 1.18.0-6ubuntu14.5 [3882 B]\cf1\highlight2 
\par \cf0\highlight0 Fetched 2693 kB in 0s (39.4 MB/s)\cf1\highlight2 
\par \cf0\highlight0 Preconfiguring packages ...\cf1\highlight2 
\par \cf0\highlight0 Selecting previously unselected package fonts-dejavu-core.\cf1\highlight2 
\par \cf0\highlight0 (Reading database ... 65896 files and directories currently installed.)\cf1\highlight2 
\par \cf0\highlight0 Preparing to unpack .../00-fonts-dejavu-core_2.37-2build1_all.deb ...\cf1\highlight2 
\par \cf0\highlight0 Unpacking fonts-dejavu-core (2.37-2build1) ...\cf1\highlight2 
\par \cf0\highlight0 Selecting previously unselected package fontconfig-config.\cf1\highlight2 
\par \cf0\highlight0 Preparing to unpack .../01-fontconfig-config_2.13.1-4.2ubuntu5_all.deb ...\cf1\highlight2 
\par \cf0\highlight0 Unpacking fontconfig-config (2.13.1-4.2ubuntu5) ...\cf1\highlight2 
\par \cf0\highlight0 Selecting previously unselected package libdeflate0:amd64.\cf1\highlight2 
\par \cf0\highlight0 Preparing to unpack .../02-libdeflate0_1.10-2_amd64.deb ...\cf1\highlight2 
\par \cf0\highlight0 Unpacking libdeflate0:amd64 (1.10-2) ...\cf1\highlight2 
\par \cf0\highlight0 Selecting previously unselected package libfontconfig1:amd64.\cf1\highlight2 
\par \cf0\highlight0 Preparing to unpack .../03-libfontconfig1_2.13.1-4.2ubuntu5_amd64.deb ...\cf1\highlight2 
\par \cf0\highlight0 Unpacking libfontconfig1:amd64 (2.13.1-4.2ubuntu5) ...\cf1\highlight2 
\par \cf0\highlight0 Selecting previously unselected package libjpeg-turbo8:amd64.\cf1\highlight2 
\par \cf0\highlight0 Preparing to unpack .../04-libjpeg-turbo8_2.1.2-0ubuntu1_amd64.deb ...\cf1\highlight2 
\par \cf0\highlight0 Unpacking libjpeg-turbo8:amd64 (2.1.2-0ubuntu1) ...\cf1\highlight2 
\par \cf0\highlight0 Selecting previously unselected package libjpeg8:amd64.\cf1\highlight2 
\par \cf0\highlight0 Preparing to unpack .../05-libjpeg8_8c-2ubuntu10_amd64.deb ...\cf1\highlight2 
\par \cf0\highlight0 Unpacking libjpeg8:amd64 (8c-2ubuntu10) ...\cf1\highlight2 
\par \cf0\highlight0 Selecting previously unselected package libjbig0:amd64.\cf1\highlight2 
\par \cf0\highlight0 Preparing to unpack .../06-libjbig0_2.1-3.1ubuntu0.22.04.1_amd64.deb ...\cf1\highlight2 
\par \cf0\highlight0 Unpacking libjbig0:amd64 (2.1-3.1ubuntu0.22.04.1) ...\cf1\highlight2 
\par \cf0\highlight0 Selecting previously unselected package libwebp7:amd64.\cf1\highlight2 
\par \cf0\highlight0 Preparing to unpack .../07-libwebp7_1.2.2-2ubuntu0.22.04.2_amd64.deb ...\cf1\highlight2 
\par \cf0\highlight0 Unpacking libwebp7:amd64 (1.2.2-2ubuntu0.22.04.2) ...\cf1\highlight2 
\par \cf0\highlight0 Selecting previously unselected package libtiff5:amd64.\cf1\highlight2 
\par \cf0\highlight0 Preparing to unpack .../08-libtiff5_4.3.0-6ubuntu0.10_amd64.deb ...\cf1\highlight2 
\par \cf0\highlight0 Unpacking libtiff5:amd64 (4.3.0-6ubuntu0.10) ...\cf1\highlight2 
\par \cf0\highlight0 Selecting previously unselected package libxpm4:amd64.\cf1\highlight2 
\par \cf0\highlight0 Preparing to unpack .../09-libxpm4_1%3a3.5.12-1ubuntu0.22.04.2_amd64.deb ...\cf1\highlight2 
\par \cf0\highlight0 Unpacking libxpm4:amd64 (1:3.5.12-1ubuntu0.22.04.2) ...\cf1\highlight2 
\par \cf0\highlight0 Selecting previously unselected package libgd3:amd64.\cf1\highlight2 
\par \cf0\highlight0 Preparing to unpack .../10-libgd3_2.3.0-2ubuntu2.3_amd64.deb ...\cf1\highlight2 
\par \cf0\highlight0 Unpacking libgd3:amd64 (2.3.0-2ubuntu2.3) ...\cf1\highlight2 
\par \cf0\highlight0 Selecting previously unselected package nginx-common.\cf1\highlight2 
\par \cf0\highlight0 Preparing to unpack .../11-nginx-common_1.18.0-6ubuntu14.5_all.deb ...\cf1\highlight2 
\par \cf0\highlight0 Unpacking nginx-common (1.18.0-6ubuntu14.5) ...\cf1\highlight2 
\par \cf0\highlight0 Selecting previously unselected package libnginx-mod-http-geoip2.\cf1\highlight2 
\par \cf0\highlight0 Preparing to unpack .../12-libnginx-mod-http-geoip2_1.18.0-6ubuntu14.5_amd64.deb ...\cf1\highlight2 
\par \cf0\highlight0 Unpacking libnginx-mod-http-geoip2 (1.18.0-6ubuntu14.5) ...\cf1\highlight2 
\par \cf0\highlight0 Selecting previously unselected package libnginx-mod-http-image-filter.\cf1\highlight2 
\par \cf0\highlight0 Preparing to unpack .../13-libnginx-mod-http-image-filter_1.18.0-6ubuntu14.5_amd64.deb ...\cf1\highlight2 
\par \cf0\highlight0 Unpacking libnginx-mod-http-image-filter (1.18.0-6ubuntu14.5) ...\cf1\highlight2 
\par \cf0\highlight0 Selecting previously unselected package libnginx-mod-http-xslt-filter.\cf1\highlight2 
\par \cf0\highlight0 Preparing to unpack .../14-libnginx-mod-http-xslt-filter_1.18.0-6ubuntu14.5_amd64.deb ...\cf1\highlight2 
\par \cf0\highlight0 Unpacking libnginx-mod-http-xslt-filter (1.18.0-6ubuntu14.5) ...\cf1\highlight2 
\par \cf0\highlight0 Selecting previously unselected package libnginx-mod-mail.\cf1\highlight2 
\par \cf0\highlight0 Preparing to unpack .../15-libnginx-mod-mail_1.18.0-6ubuntu14.5_amd64.deb ...\cf1\highlight2 
\par \cf0\highlight0 Unpacking libnginx-mod-mail (1.18.0-6ubuntu14.5) ...\cf1\highlight2 
\par \cf0\highlight0 Selecting previously unselected package libnginx-mod-stream.\cf1\highlight2 
\par \cf0\highlight0 Preparing to unpack .../16-libnginx-mod-stream_1.18.0-6ubuntu14.5_amd64.deb ...\cf1\highlight2 
\par \cf0\highlight0 Unpacking libnginx-mod-stream (1.18.0-6ubuntu14.5) ...\cf1\highlight2 
\par \cf0\highlight0 Selecting previously unselected package libnginx-mod-stream-geoip2.\cf1\highlight2 
\par \cf0\highlight0 Preparing to unpack .../17-libnginx-mod-stream-geoip2_1.18.0-6ubuntu14.5_amd64.deb ...\cf1\highlight2 
\par \cf0\highlight0 Unpacking libnginx-mod-stream-geoip2 (1.18.0-6ubuntu14.5) ...\cf1\highlight2 
\par \cf0\highlight0 Selecting previously unselected package nginx-core.\cf1\highlight2 
\par \cf0\highlight0 Preparing to unpack .../18-nginx-core_1.18.0-6ubuntu14.5_amd64.deb ...\cf1\highlight2 
\par \cf0\highlight0 Unpacking nginx-core (1.18.0-6ubuntu14.5) ...\cf1\highlight2 
\par \cf0\highlight0 Selecting previously unselected package nginx.\cf1\highlight2 
\par \cf0\highlight0 Preparing to unpack .../19-nginx_1.18.0-6ubuntu14.5_amd64.deb ...\cf1\highlight2 
\par \cf0\highlight0 Unpacking nginx (1.18.0-6ubuntu14.5) ...\cf1\highlight2 
\par \cf0\highlight0 Setting up libxpm4:amd64 (1:3.5.12-1ubuntu0.22.04.2) ...\cf1\highlight2 
\par \cf0\highlight0 Setting up libdeflate0:amd64 (1.10-2) ...\cf1\highlight2 
\par \cf0\highlight0 Setting up nginx-common (1.18.0-6ubuntu14.5) ...\cf1\highlight2 
\par \cf0\highlight0 Created symlink /etc/systemd/system/multi-user.target.wants/nginx.service \u8594? /lib/systemd/system/nginx.service.\cf1\highlight2 
\par \cf0\highlight0 Setting up libjbig0:amd64 (2.1-3.1ubuntu0.22.04.1) ...\cf1\highlight2 
\par \cf0\highlight0 Setting up libnginx-mod-http-xslt-filter (1.18.0-6ubuntu14.5) ...\cf1\highlight2 
\par \cf0\highlight0 Setting up fonts-dejavu-core (2.37-2build1) ...\cf1\highlight2 
\par \cf0\highlight0 Setting up libjpeg-turbo8:amd64 (2.1.2-0ubuntu1) ...\cf1\highlight2 
\par \cf0\highlight0 Setting up libwebp7:amd64 (1.2.2-2ubuntu0.22.04.2) ...\cf1\highlight2 
\par \cf0\highlight0 Setting up libnginx-mod-http-geoip2 (1.18.0-6ubuntu14.5) ...\cf1\highlight2 
\par \cf0\highlight0 Setting up libjpeg8:amd64 (8c-2ubuntu10) ...\cf1\highlight2 
\par \cf0\highlight0 Setting up libnginx-mod-mail (1.18.0-6ubuntu14.5) ...\cf1\highlight2 
\par \cf0\highlight0 Setting up fontconfig-config (2.13.1-4.2ubuntu5) ...\cf1\highlight2 
\par \cf0\highlight0 Setting up libnginx-mod-stream (1.18.0-6ubuntu14.5) ...\cf1\highlight2 
\par \cf0\highlight0 Setting up libtiff5:amd64 (4.3.0-6ubuntu0.10) ...\cf1\highlight2 
\par \cf0\highlight0 Setting up libfontconfig1:amd64 (2.13.1-4.2ubuntu5) ...\cf1\highlight2 
\par \cf0\highlight0 Setting up libnginx-mod-stream-geoip2 (1.18.0-6ubuntu14.5) ...\cf1\highlight2 
\par \cf0\highlight0 Setting up libgd3:amd64 (2.3.0-2ubuntu2.3) ...\cf1\highlight2 
\par \cf0\highlight0 Setting up libnginx-mod-http-image-filter (1.18.0-6ubuntu14.5) ...\cf1\highlight2 
\par \cf0\highlight0 Setting up nginx-core (1.18.0-6ubuntu14.5) ...\cf1\highlight2 
\par \cf0\highlight0  * Upgrading binary nginx                                                        [ OK ]\cf1\highlight2 
\par \cf0\highlight0 Setting up nginx (1.18.0-6ubuntu14.5) ...\cf1\highlight2 
\par \cf0\highlight0 Processing triggers for ufw (0.36.1-4ubuntu0.1) ...\cf1\highlight2 
\par \cf0\highlight0 Processing triggers for man-db (2.10.2-1) ...\cf1\highlight2 
\par \cf0\highlight0 Processing triggers for libc-bin (2.35-0ubuntu3.8) ...\cf1\highlight2 
\par \cf0\highlight0 Scanning processes...\cf1\highlight2 
\par \cf0\highlight0 Scanning linux images...\cf1\highlight2 
\par 
\par \cf0\highlight0 Running kernel seems to be up-to-date.\cf1\highlight2 
\par 
\par \cf0\highlight0 No services need to be restarted.\cf1\highlight2 
\par 
\par \cf0\highlight0 No containers need to be restarted.\cf1\highlight2 
\par 
\par \cf0\highlight0 No user sessions are running outdated binaries.\cf1\highlight2 
\par 
\par \cf0\highlight0 No VM guests are running outdated hypervisor (qemu) binaries on this host.\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# systemctl status nginx\cf1\highlight2 
\par \cf3\highlight0\u9679?\cf0  nginx.service - A high performance web server and a reverse proxy server\cf1\highlight2 
\par \cf0\highlight0      Loaded: loaded (/lib/systemd/system/nginx.service; enabled; vendor preset: enabled)\cf1\highlight2 
\par \cf0\highlight0      Active: \cf3 active (running)\cf0  since Thu 2025-02-20 09:52:33 UTC; 17s ago\cf1\highlight2 
\par \cf0\highlight0        Docs: man:nginx(8)\cf1\highlight2 
\par \cf0\highlight0     Process: 4074 ExecStartPre=/usr/sbin/nginx -t -q -g daemon on; master_process on; (\cf7\highlight8 >\cf1\highlight2 
\par \cf0\highlight0     Process: 4075 ExecStart=/usr/sbin/nginx -g daemon on; master_process on; (code=exit\cf7\highlight8 >\cf1\highlight2 
\par \cf0\highlight0    Main PID: 4174 (nginx)\cf1\highlight2 
\par \cf0\highlight0       Tasks: 2 (limit: 1130)\cf1\highlight2 
\par \cf0\highlight0      Memory: 4.1M\cf1\highlight2 
\par \cf0\highlight0         CPU: 21ms\cf1\highlight2 
\par \cf0\highlight0      CGroup: /system.slice/nginx.service\cf1\highlight2 
\par \cf0\highlight0              \u9500?\u9472?4174 "nginx: master process /usr/sbin/nginx -g daemon on; master_process\cf7\highlight8 >\cf1\highlight2 
\par \cf0\highlight0              \u9492?\u9472?4177 "nginx: worker process" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "\cf7\highlight8 >\cf1\highlight2 
\par 
\par \cf0\highlight0 Feb 20 09:52:33 ip-172-31-6-26 systemd[1]: Starting A high performance web server and a\cf7\highlight8 >\cf1\highlight2 
\par \cf0\highlight0 Feb 20 09:52:33 ip-172-31-6-26 systemd[1]: Started A high performance web server and a \cf7\highlight8 >\cf1\highlight2 
\par 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# ls\cf1\highlight2 
\par \cf9\highlight0 conf-available\cf0   \cf9 conf-enabled\cf0   \cf9 conf.d\cf0   monitrc  \cf9 templates\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# cd conf.d/\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit/conf.d# vi nginx\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit/conf.d# monit -t\cf1\highlight2 
\par \cf0\highlight0 Control file syntax OK\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit/conf.d# monit reload\cf1\highlight2 
\par \cf0\highlight0 Reinitializing monit daemon\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit/conf.d# cd ..\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# vi monitrc\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# monit -t\cf1\highlight2 
\par \cf0\highlight0 Control file syntax OK\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# monit reload\cf1\highlight2 
\par \cf0\highlight0 Reinitializing monit daemon\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# cd ..\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc# cd monit/\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# ls\cf1\highlight2 
\par \cf9\highlight0 conf-available\cf0   \cf9 conf-enabled\cf0   \cf9 conf.d\cf0   monitrc  \cf9 templates\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# cd conf.d/\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit/conf.d# ls\cf1\highlight2 
\par \cf0\highlight0 nginx\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit/conf.d# cat nginx\cf1\highlight2 
\par \cf0\highlight0 check process nginx with pidfile /run/nginx.pid\cf1\highlight2 
\par \cf0\highlight0           start program = "/usr/sbin/service nginx start" with timeout 60 seconds\cf1\highlight2 
\par \cf0\highlight0           stop program = "/usr/sbin/service nginx stop"\cf1\highlight2 
\par \cf0\highlight0           if failed host 127.0.0.1 port 80 protocol http for 3 cycles then restart\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit/conf.d# vi nginx\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit/conf.d# monit -t\cf1\highlight2 
\par \cf0\highlight0 Control file syntax OK\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit/conf.d# monit reload\cf1\highlight2 
\par \cf0\highlight0 Reinitializing monit daemon\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit/conf.d# systemctl stop nginx\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit/conf.d# tail -f /var/log/monit.log\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:05:01+0000] info     : Adding event to the queue file /var/lib/monit/events/1740045901_63748a83e670 for later delivery\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:05:12+0000] error    : Mail: Mailserver response error -- 535-5.7.8 Username and Password not accepted. For more information, go to\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:05:12+0000] error    : SMTP: Mailserver response error -- 535 5.7.8  https://support.google.com/mail/?p=BadCredentials d9443c01a7336-220d55850f5sm116448845ad.208 - gsmtp\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:05:13+0000] error    : Alert handler failed, retry scheduled for next cycle\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:05:24+0000] error    : Mail: Mailserver response error -- 535-5.7.8 Username and Password not accepted. For more information, go to\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:05:24+0000] error    : SMTP: Mailserver response error -- 535 5.7.8  https://support.google.com/mail/?p=BadCredentials d2e1a72fcca58-732425467b9sm13396486b3a.30 - gsmtp\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:05:24+0000] error    : Alert handler failed, retry scheduled for next cycle\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:05:36+0000] error    : Mail: Mailserver response error -- 535-5.7.8 Username and Password not accepted. For more information, go to\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:05:36+0000] error    : SMTP: Mailserver response error -- 535 5.7.8  https://support.google.com/mail/?p=BadCredentials d9443c01a7336-220d53491ecsm117608885ad.9 - gsmtp\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:05:36+0000] error    : Alert handler failed, retry scheduled for next cycle\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:05:48+0000] error    : Mail: Mailserver response error -- 535-5.7.8 Username and Password not accepted. For more information, go to\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:05:48+0000] error    : SMTP: Mailserver response error -- 535 5.7.8  https://support.google.com/mail/?p=BadCredentials 98e67ed59e1d1-2fc13b90c2csm13477325a91.36 - gsmtp\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:05:48+0000] error    : Alert handler failed, retry scheduled for next cycle\cf1\highlight2 
\par \cf0\highlight0 ^C\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit/conf.d# cd ..\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# cat monitrc\cf1\highlight2 
\par \cf0\highlight0 ###############################################################################\cf1\highlight2 
\par \cf0\highlight0 ## Monit control file\cf1\highlight2 
\par \cf0\highlight0 ###############################################################################\cf1\highlight2 
\par \cf0\highlight0 ##\cf1\highlight2 
\par \cf0\highlight0 ## Comments begin with a '#' and extend through the end of the line. Keywords\cf1\highlight2 
\par \cf0\highlight0 ## are case insensitive. All path's MUST BE FULLY QUALIFIED, starting with '/'.\cf1\highlight2 
\par \cf0\highlight0 ##\cf1\highlight2 
\par \cf0\highlight0 ## Below you will find examples of some frequently used statements. For\cf1\highlight2 
\par \cf0\highlight0 ## information about the control file and a complete list of statements and\cf1\highlight2 
\par \cf0\highlight0 ## options, please have a look in the Monit manual.\cf1\highlight2 
\par \cf0\highlight0 ##\cf1\highlight2 
\par \cf0\highlight0 ##\cf1\highlight2 
\par \cf0\highlight0 ###############################################################################\cf1\highlight2 
\par \cf0\highlight0 ## Global section\cf1\highlight2 
\par \cf0\highlight0 ###############################################################################\cf1\highlight2 
\par \cf0\highlight0 ##\cf1\highlight2 
\par \cf0\highlight0 ## Start Monit in the background (run as a daemon):\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 set daemon  10             # check services at 120 seconds intervals\cf1\highlight2 
\par \cf0\highlight0 #   with start delay 240    # optional: delay the first check by 4-minutes (by\cf1\highlight2 
\par \cf0\highlight0 #                           # default Monit check immediately after Monit start)\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Set syslog logging. If you want to log to a standalone log file instead,\cf1\highlight2 
\par \cf0\highlight0 ## specify the full path to the log file\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 set log /var/log/monit.log\cf1\highlight2 
\par 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Set the location of the Monit lock file which stores the process id of the\cf1\highlight2 
\par \cf0\highlight0 ## running Monit instance. By default this file is stored in $HOME/.monit.pid\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 # set pidfile /var/run/monit.pid\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Set the location of the Monit id file which stores the unique id for the\cf1\highlight2 
\par \cf0\highlight0 ## Monit instance. The id is generated and stored on first Monit start. By\cf1\highlight2 
\par \cf0\highlight0 ## default the file is placed in $HOME/.monit.id.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 # set idfile /var/.monit.id\cf1\highlight2 
\par \cf0\highlight0 set idfile /var/lib/monit/id\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Set the location of the Monit state file which saves monitoring states\cf1\highlight2 
\par \cf0\highlight0 ## on each cycle. By default the file is placed in $HOME/.monit.state. If\cf1\highlight2 
\par \cf0\highlight0 ## the state file is stored on a persistent filesystem, Monit will recover\cf1\highlight2 
\par \cf0\highlight0 ## the monitoring state across reboots. If it is on temporary filesystem, the\cf1\highlight2 
\par \cf0\highlight0 ## state will be lost on reboot which may be convenient in some situations.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 # set statefile /var/.monit.state\cf1\highlight2 
\par \cf0\highlight0 set statefile /var/lib/monit/state\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par 
\par \cf0\highlight0 ## Set limits for various tests. The following example shows the default values:\cf1\highlight2 
\par \cf0\highlight0 ##\cf1\highlight2 
\par \cf0\highlight0 # set limits \{\cf1\highlight2 
\par \cf0\highlight0 #     programOutput:     512 B,      # check program's output truncate limit\cf1\highlight2 
\par \cf0\highlight0 #     sendExpectBuffer:  256 B,      # limit for send/expect protocol test\cf1\highlight2 
\par \cf0\highlight0 #     fileContentBuffer: 512 B,      # limit for file content test\cf1\highlight2 
\par \cf0\highlight0 #     httpContentBuffer: 1 MB,       # limit for HTTP content test\cf1\highlight2 
\par \cf0\highlight0 #     networkTimeout:    5 seconds   # timeout for network I/O\cf1\highlight2 
\par \cf0\highlight0 #     programTimeout:    300 seconds # timeout for check program\cf1\highlight2 
\par \cf0\highlight0 #     stopTimeout:       30 seconds  # timeout for service stop\cf1\highlight2 
\par \cf0\highlight0 #     startTimeout:      30 seconds  # timeout for service start\cf1\highlight2 
\par \cf0\highlight0 #     restartTimeout:    30 seconds  # timeout for service restart\cf1\highlight2 
\par \cf0\highlight0 # \}\cf1\highlight2 
\par 
\par \cf0\highlight0 ## Set global SSL options (just most common options showed, see manual for\cf1\highlight2 
\par \cf0\highlight0 ## full list).\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 # set ssl \{\cf1\highlight2 
\par \cf0\highlight0 #     verify     : enable, # verify SSL certificates (disabled by default but STRONGLY RECOMMENDED)\cf1\highlight2 
\par \cf0\highlight0 #     selfsigned : allow   # allow self signed SSL certificates (reject by default)\cf1\highlight2 
\par \cf0\highlight0 # \}\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Set the list of mail servers for alert delivery. Multiple servers may be\cf1\highlight2 
\par \cf0\highlight0 ## specified using a comma separator. If the first mail server fails, Monit\cf1\highlight2 
\par \cf0\highlight0 ## will use the second mail server in the list and so on. By default Monit uses\cf1\highlight2 
\par \cf0\highlight0 ## port 25 - it is possible to override this with the PORT option.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0  set mailserver smtp.gmail.com port 587\cf1\highlight2 
\par \cf0\highlight0       username "mailtesting247@gmail.com" password "Password@123"\cf1\highlight2 
\par \cf0\highlight0       using tls\cf1\highlight2 
\par 
\par \cf0\highlight0  set alert gyanaranjanmallick444@gmail.com\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## By default Monit will drop alert events if no mail servers are available.\cf1\highlight2 
\par \cf0\highlight0 ## If you want to keep the alerts for later delivery retry, you can use the\cf1\highlight2 
\par \cf0\highlight0 ## EVENTQUEUE statement. The base directory where undelivered alerts will be\cf1\highlight2 
\par \cf0\highlight0 ## stored is specified by the BASEDIR option. You can limit the queue size\cf1\highlight2 
\par \cf0\highlight0 ## by using the SLOTS option (if omitted, the queue is limited by space\cf1\highlight2 
\par \cf0\highlight0 ## available in the back end filesystem).\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0  set eventqueue\cf1\highlight2 
\par \cf0\highlight0      basedir /var/lib/monit/events  # set the base directory where events will be stored\cf1\highlight2 
\par \cf0\highlight0      slots 100                      # optionally limit the queue size\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Send status and events to M/Monit (for more information about M/Monit\cf1\highlight2 
\par \cf0\highlight0 ## see https://mmonit.com/). By default Monit registers credentials with\cf1\highlight2 
\par \cf0\highlight0 ## M/Monit so M/Monit can smoothly communicate back to Monit and you don't\cf1\highlight2 
\par \cf0\highlight0 ## have to register Monit credentials manually in M/Monit. It is possible to\cf1\highlight2 
\par \cf0\highlight0 ## disable credential registration using the commented out option below.\cf1\highlight2 
\par \cf0\highlight0 ## Though, if safety is a concern we recommend instead using https when\cf1\highlight2 
\par \cf0\highlight0 ## communicating with M/Monit and send credentials encrypted. The password\cf1\highlight2 
\par \cf0\highlight0 ## should be URL encoded if it contains URL-significant characters like\cf1\highlight2 
\par \cf0\highlight0 ## ":", "?", "@". Default timeout is 5 seconds, you can customize it by\cf1\highlight2 
\par \cf0\highlight0 ## adding the timeout option.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 # set mmonit http://monit:monit@192.168.1.10:8080/collector\cf1\highlight2 
\par \cf0\highlight0 #     # with timeout 30 seconds              # Default timeout is 5 seconds\cf1\highlight2 
\par \cf0\highlight0 #     # and register without credentials     # Don't register credentials\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Monit by default uses the following format for alerts if the mail-format\cf1\highlight2 
\par \cf0\highlight0 ## statement is missing::\cf1\highlight2 
\par \cf0\highlight0 ## --8<--\cf1\highlight2 
\par \cf0\highlight0 ## set mail-format \{\cf1\highlight2 
\par \cf0\highlight0 ##   from:    Monit <monit@$HOST>\cf1\highlight2 
\par \cf0\highlight0 ##   subject: monit alert --  $EVENT $SERVICE\cf1\highlight2 
\par \cf0\highlight0 ##   message: $EVENT Service $SERVICE\cf1\highlight2 
\par \cf0\highlight0 ##                 Date:        $DATE\cf1\highlight2 
\par \cf0\highlight0 ##                 Action:      $ACTION\cf1\highlight2 
\par \cf0\highlight0 ##                 Host:        $HOST\cf1\highlight2 
\par \cf0\highlight0 ##                 Description: $DESCRIPTION\cf1\highlight2 
\par \cf0\highlight0 ##\cf1\highlight2 
\par \cf0\highlight0 ##            Your faithful employee,\cf1\highlight2 
\par \cf0\highlight0 ##            Monit\cf1\highlight2 
\par \cf0\highlight0 ## \}\cf1\highlight2 
\par \cf0\highlight0 ## --8<--\cf1\highlight2 
\par \cf0\highlight0 ##\cf1\highlight2 
\par \cf0\highlight0 ## You can override this message format or parts of it, such as subject\cf1\highlight2 
\par \cf0\highlight0 ## or sender using the MAIL-FORMAT statement. Macros such as $DATE, etc.\cf1\highlight2 
\par \cf0\highlight0 ## are expanded at runtime. For example, to override the sender, use:\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 # set mail-format \{ from: monit@foo.bar \}\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## You can set alert recipients whom will receive alerts if/when a\cf1\highlight2 
\par \cf0\highlight0 ## service defined in this file has errors. Alerts may be restricted on\cf1\highlight2 
\par \cf0\highlight0 ## events by using a filter as in the second example below.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 # set alert sysadm@foo.bar                       # receive all alerts\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Do not alert when Monit starts, stops or performs a user initiated action.\cf1\highlight2 
\par \cf0\highlight0 ## This filter is recommended to avoid getting alerts for trivial cases.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 # set alert your-name@your.domain not on \{ instance, action \}\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Monit has an embedded HTTP interface which can be used to view status of\cf1\highlight2 
\par \cf0\highlight0 ## services monitored and manage services from a web interface. The HTTP\cf1\highlight2 
\par \cf0\highlight0 ## interface is also required if you want to issue Monit commands from the\cf1\highlight2 
\par \cf0\highlight0 ## command line, such as 'monit status' or 'monit restart service' The reason\cf1\highlight2 
\par \cf0\highlight0 ## for this is that the Monit client uses the HTTP interface to send these\cf1\highlight2 
\par \cf0\highlight0 ## commands to a running Monit daemon. See the Monit Wiki if you want to\cf1\highlight2 
\par \cf0\highlight0 ## enable SSL for the HTTP interface.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 set httpd port 2812 and\cf1\highlight2 
\par \cf0\highlight0     use address 172.31.6.26  # only accept connection from localhost (drop if you use M/Monit)\cf1\highlight2 
\par \cf0\highlight0     allow 0.0.0.0/0        # allow localhost to connect to the server and\cf1\highlight2 
\par \cf0\highlight0     allow admin:monit      # require user 'admin' with password 'monit'\cf1\highlight2 
\par \cf0\highlight0 #    #with ssl \{            # enable SSL/TLS and set path to server certificate\cf1\highlight2 
\par \cf0\highlight0 #    #    pemfile: /etc/ssl/certs/monit.pem\cf1\highlight2 
\par \cf0\highlight0 #    #\}\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Monit can perform act differently regarding services previous state when\cf1\highlight2 
\par \cf0\highlight0 ## going back in duty. By default, Monit will 'start' all services. Monit can\cf1\highlight2 
\par \cf0\highlight0 ## also takes no action to start services in 'nostart' mode. Monit can try to\cf1\highlight2 
\par \cf0\highlight0 ## restore the 'laststate' of the service when Monit was shutdown.\cf1\highlight2 
\par \cf0\highlight0 # set onreboot start # start, nostart, laststart\cf1\highlight2 
\par 
\par \cf0\highlight0 ###############################################################################\cf1\highlight2 
\par \cf0\highlight0 ## Services\cf1\highlight2 
\par \cf0\highlight0 ###############################################################################\cf1\highlight2 
\par \cf0\highlight0 ##\cf1\highlight2 
\par \cf0\highlight0 ## Check general system resources such as load average, cpu and memory\cf1\highlight2 
\par \cf0\highlight0 ## usage. Each test specifies a resource, conditions and the action to be\cf1\highlight2 
\par \cf0\highlight0 ## performed should a test fail.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #  check system $HOST\cf1\highlight2 
\par \cf0\highlight0 #    if loadavg (1min) per core > 2 for 5 cycles then alert\cf1\highlight2 
\par \cf0\highlight0 #    if loadavg (5min) per core > 1.5 for 10 cycles then alert\cf1\highlight2 
\par \cf0\highlight0 #    if cpu usage > 95% for 10 cycles then alert\cf1\highlight2 
\par \cf0\highlight0 #    if memory usage > 75% then alert\cf1\highlight2 
\par \cf0\highlight0 #    if swap usage > 25% then alert\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Check if a file exists, checksum, permissions, uid and gid. In addition\cf1\highlight2 
\par \cf0\highlight0 ## to alert recipients in the global section, customized alert can be sent to\cf1\highlight2 
\par \cf0\highlight0 ## additional recipients by specifying a local alert handler. The service may\cf1\highlight2 
\par \cf0\highlight0 ## be grouped using the GROUP option. More than one group can be specified by\cf1\highlight2 
\par \cf0\highlight0 ## repeating the 'group name' statement.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #  check file apache_bin with path /usr/local/apache/bin/httpd\cf1\highlight2 
\par \cf0\highlight0 #    if failed checksum and\cf1\highlight2 
\par \cf0\highlight0 #       expect the sum 8f7f419955cefa0b33a2ba316cba3659 then unmonitor\cf1\highlight2 
\par \cf0\highlight0 #    if failed permission 755 then unmonitor\cf1\highlight2 
\par \cf0\highlight0 #    if failed uid "root" then unmonitor\cf1\highlight2 
\par \cf0\highlight0 #    if failed gid "root" then unmonitor\cf1\highlight2 
\par \cf0\highlight0 #    alert security@foo.bar on \{\cf1\highlight2 
\par \cf0\highlight0 #           checksum, permission, uid, gid, unmonitor\cf1\highlight2 
\par \cf0\highlight0 #        \} with the mail-format \{ subject: Alarm! \}\cf1\highlight2 
\par \cf0\highlight0 #    group server\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Check that a process is running, in this case Apache, and that it respond\cf1\highlight2 
\par \cf0\highlight0 ## to HTTP and HTTPS requests. Check its resource usage such as cpu and memory,\cf1\highlight2 
\par \cf0\highlight0 ## and number of children. If the process is not running, Monit will restart\cf1\highlight2 
\par \cf0\highlight0 ## it by default. In case the service is restarted very often and the\cf1\highlight2 
\par \cf0\highlight0 ## problem remains, it is possible to disable monitoring using the TIMEOUT\cf1\highlight2 
\par \cf0\highlight0 ## statement. This service depends on another service (apache_bin) which\cf1\highlight2 
\par \cf0\highlight0 ## is defined above.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #  check process apache with pidfile /usr/local/apache/logs/httpd.pid\cf1\highlight2 
\par \cf0\highlight0 #    start program = "/etc/init.d/httpd start" with timeout 60 seconds\cf1\highlight2 
\par \cf0\highlight0 #    stop program  = "/etc/init.d/httpd stop"\cf1\highlight2 
\par \cf0\highlight0 #    if cpu > 60% for 2 cycles then alert\cf1\highlight2 
\par \cf0\highlight0 #    if cpu > 80% for 5 cycles then restart\cf1\highlight2 
\par \cf0\highlight0 #    if totalmem > 200.0 MB for 5 cycles then restart\cf1\highlight2 
\par \cf0\highlight0 #    if children > 250 then restart\cf1\highlight2 
\par \cf0\highlight0 #    if disk read > 500 kb/s for 10 cycles then alert\cf1\highlight2 
\par \cf0\highlight0 #    if disk write > 500 kb/s for 10 cycles then alert\cf1\highlight2 
\par \cf0\highlight0 #    if failed host www.tildeslash.com port 80 protocol http and request "/somefile.html" then restart\cf1\highlight2 
\par \cf0\highlight0 #    if failed port 443 protocol https with timeout 15 seconds then restart\cf1\highlight2 
\par \cf0\highlight0 #    if 3 restarts within 5 cycles then unmonitor\cf1\highlight2 
\par \cf0\highlight0 #    depends on apache_bin\cf1\highlight2 
\par \cf0\highlight0 #    group server\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Check filesystem permissions, uid, gid, space usage, inode usage and disk I/O.\cf1\highlight2 
\par \cf0\highlight0 ## Other services, such as databases, may depend on this resource and an automatically\cf1\highlight2 
\par \cf0\highlight0 ## graceful stop may be cascaded to them before the filesystem will become full and data\cf1\highlight2 
\par \cf0\highlight0 ## lost.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #  check filesystem datafs with path /dev/sdb1\cf1\highlight2 
\par \cf0\highlight0 #    start program  = "/bin/mount /data"\cf1\highlight2 
\par \cf0\highlight0 #    stop program  = "/bin/umount /data"\cf1\highlight2 
\par \cf0\highlight0 #    if failed permission 660 then unmonitor\cf1\highlight2 
\par \cf0\highlight0 #    if failed uid "root" then unmonitor\cf1\highlight2 
\par \cf0\highlight0 #    if failed gid "disk" then unmonitor\cf1\highlight2 
\par \cf0\highlight0 #    if space usage > 80% for 5 times within 15 cycles then alert\cf1\highlight2 
\par \cf0\highlight0 #    if space usage > 99% then stop\cf1\highlight2 
\par \cf0\highlight0 #    if inode usage > 30000 then alert\cf1\highlight2 
\par \cf0\highlight0 #    if inode usage > 99% then stop\cf1\highlight2 
\par \cf0\highlight0 #    if read rate > 1 MB/s for 5 cycles then alert\cf1\highlight2 
\par \cf0\highlight0 #    if read rate > 500 operations/s for 5 cycles then alert\cf1\highlight2 
\par \cf0\highlight0 #    if write rate > 1 MB/s for 5 cycles then alert\cf1\highlight2 
\par \cf0\highlight0 #    if write rate > 500 operations/s for 5 cycles then alert\cf1\highlight2 
\par \cf0\highlight0 #    if service time > 10 milliseconds for 3 times within 5 cycles then alert\cf1\highlight2 
\par \cf0\highlight0 #    group server\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Check a file's timestamp. In this example, we test if a file is older\cf1\highlight2 
\par \cf0\highlight0 ## than 15 minutes and assume something is wrong if its not updated. Also,\cf1\highlight2 
\par \cf0\highlight0 ## if the file size exceed a given limit, execute a script\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #  check file database with path /data/mydatabase.db\cf1\highlight2 
\par \cf0\highlight0 #    if failed permission 700 then alert\cf1\highlight2 
\par \cf0\highlight0 #    if failed uid "data" then alert\cf1\highlight2 
\par \cf0\highlight0 #    if failed gid "data" then alert\cf1\highlight2 
\par \cf0\highlight0 #    if timestamp > 15 minutes then alert\cf1\highlight2 
\par \cf0\highlight0 #    if size > 100 MB then exec "/my/cleanup/script" as uid dba and gid dba\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Check directory permission, uid and gid.  An event is triggered if the\cf1\highlight2 
\par \cf0\highlight0 ## directory does not belong to the user with uid 0 and gid 0.  In addition,\cf1\highlight2 
\par \cf0\highlight0 ## the permissions have to match the octal description of 755 (see chmod(1)).\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #  check directory bin with path /bin\cf1\highlight2 
\par \cf0\highlight0 #    if failed permission 755 then unmonitor\cf1\highlight2 
\par \cf0\highlight0 #    if failed uid 0 then unmonitor\cf1\highlight2 
\par \cf0\highlight0 #    if failed gid 0 then unmonitor\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Check a remote host availability by issuing a ping test and check the\cf1\highlight2 
\par \cf0\highlight0 ## content of a response from a web server. Up to three pings are sent and\cf1\highlight2 
\par \cf0\highlight0 ## connection to a port and an application level network check is performed.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #  check host myserver with address 192.168.1.1\cf1\highlight2 
\par \cf0\highlight0 #    if failed ping then alert\cf1\highlight2 
\par \cf0\highlight0 #    if failed port 3306 protocol mysql with timeout 15 seconds then alert\cf1\highlight2 
\par \cf0\highlight0 #    if failed port 80 protocol http\cf1\highlight2 
\par \cf0\highlight0 #       and request /some/path with content = "a string"\cf1\highlight2 
\par \cf0\highlight0 #    then alert\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Check a network link status (up/down), link capacity changes, saturation\cf1\highlight2 
\par \cf0\highlight0 ## and bandwidth usage.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #  check network public with interface eth0\cf1\highlight2 
\par \cf0\highlight0 #    if link down then alert\cf1\highlight2 
\par \cf0\highlight0 #    if changed link then alert\cf1\highlight2 
\par \cf0\highlight0 #    if saturation > 90% then alert\cf1\highlight2 
\par \cf0\highlight0 #    if download > 10 MB/s then alert\cf1\highlight2 
\par \cf0\highlight0 #    if total uploaded > 1 GB in last hour then alert\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Check custom program status output.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #  check program myscript with path /usr/local/bin/myscript.sh\cf1\highlight2 
\par \cf0\highlight0 #    if status != 0 then alert\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ###############################################################################\cf1\highlight2 
\par \cf0\highlight0 ## Includes\cf1\highlight2 
\par \cf0\highlight0 ###############################################################################\cf1\highlight2 
\par \cf0\highlight0 ##\cf1\highlight2 
\par \cf0\highlight0 ## It is possible to include additional configuration parts from other files or\cf1\highlight2 
\par \cf0\highlight0 ## directories.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #  include /etc/monit.d/*\cf1\highlight2 
\par \cf0\highlight0 include /etc/monit/conf.d/*\cf1\highlight2 
\par \cf0\highlight0 include /etc/monit/conf-enabled/*\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# vi monitrc\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# monit -t\cf1\highlight2 
\par \cf0\highlight0 Control file syntax OK\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# monit reload\cf1\highlight2 
\par \cf0\highlight0 Reinitializing monit daemon\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# systemctl start nginx\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# systemctl status nginx\cf1\highlight2 
\par \cf3\highlight0\u9679?\cf0  nginx.service - A high performance web server and a reverse proxy server\cf1\highlight2 
\par \cf0\highlight0      Loaded: loaded (/lib/systemd/system/nginx.service; enabled; vendor preset: enabled)\cf1\highlight2 
\par \cf0\highlight0      Active: \cf3 active (running)\cf0  since Thu 2025-02-20 10:04:47 UTC; 13min ago\cf1\highlight2 
\par \cf0\highlight0        Docs: man:nginx(8)\cf1\highlight2 
\par \cf0\highlight0     Process: 8697 ExecStartPre=/usr/sbin/nginx -t -q -g daemon on; master_process on; (\cf7\highlight8 >\cf1\highlight2 
\par \cf0\highlight0     Process: 8698 ExecStart=/usr/sbin/nginx -g daemon on; master_process on; (code=exit\cf7\highlight8 >\cf1\highlight2 
\par \cf0\highlight0    Main PID: 8699 (nginx)\cf1\highlight2 
\par \cf0\highlight0       Tasks: 2 (limit: 1130)\cf1\highlight2 
\par \cf0\highlight0      Memory: 2.6M\cf1\highlight2 
\par \cf0\highlight0         CPU: 30ms\cf1\highlight2 
\par \cf0\highlight0      CGroup: /system.slice/nginx.service\cf1\highlight2 
\par \cf0\highlight0              \u9500?\u9472?8699 "nginx: master process /usr/sbin/nginx -g daemon on; master_process\cf7\highlight8 >\cf1\highlight2 
\par \cf0\highlight0              \u9492?\u9472?8700 "nginx: worker process" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "\cf7\highlight8 >\cf1\highlight2 
\par 
\par \cf0\highlight0 Feb 20 10:04:47 ip-172-31-6-26 systemd[1]: Starting A high performance web server and a\cf7\highlight8 >\cf1\highlight2 
\par \cf0\highlight0 Feb 20 10:04:47 ip-172-31-6-26 systemd[1]: Started A high performance web server and a \cf7\highlight8 >\cf1\highlight2 
\par 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# tail -f /var/log/monit.log\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:17:14+0000] error    : Alert handler failed, retry scheduled for next cycle\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:17:26+0000] error    : Mail: Mailserver response error -- 535-5.7.8 Username and Password not accepted. For more information, go to\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:17:26+0000] error    : SMTP: Mailserver response error -- 535 5.7.8  https://support.google.com/mail/?p=BadCredentials d9443c01a7336-220d55963c0sm116820845ad.251 - gsmtp\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:17:26+0000] error    : Alert handler failed, retry scheduled for next cycle\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:17:38+0000] info     : Reinitializing monit daemon\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:17:38+0000] error    : Mail: Mailserver response error -- 535-5.7.8 Username and Password not accepted. For more information, go to\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:17:38+0000] error    : SMTP: Mailserver response error -- 535 5.7.8  https://support.google.com/mail/?p=BadCredentials 98e67ed59e1d1-2fc13b91588sm13525545a91.37 - gsmtp\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:17:38+0000] error    : Alert handler failed, retry scheduled for next cycle\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:17:38+0000] info     : Reinitializing Monit -- control file '/etc/monit/monitrc'\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:17:38+0000] info     : 'ip-172-31-6-26' Monit reloaded\cf1\highlight2 
\par \cf0\highlight0 ^C\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# systemctl stop nginx\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# tail -f /var/log/monit.log\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:17:14+0000] error    : Alert handler failed, retry scheduled for next cycle\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:17:26+0000] error    : Mail: Mailserver response error -- 535-5.7.8 Username and Password not accepted. For more information, go to\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:17:26+0000] error    : SMTP: Mailserver response error -- 535 5.7.8  https://support.google.com/mail/?p=BadCredentials d9443c01a7336-220d55963c0sm116820845ad.251 - gsmtp\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:17:26+0000] error    : Alert handler failed, retry scheduled for next cycle\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:17:38+0000] info     : Reinitializing monit daemon\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:17:38+0000] error    : Mail: Mailserver response error -- 535-5.7.8 Username and Password not accepted. For more information, go to\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:17:38+0000] error    : SMTP: Mailserver response error -- 535 5.7.8  https://support.google.com/mail/?p=BadCredentials 98e67ed59e1d1-2fc13b91588sm13525545a91.37 - gsmtp\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:17:38+0000] error    : Alert handler failed, retry scheduled for next cycle\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:17:38+0000] info     : Reinitializing Monit -- control file '/etc/monit/monitrc'\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:17:38+0000] info     : 'ip-172-31-6-26' Monit reloaded\cf1\highlight2 
\par \cf0\highlight0 ^C\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# tail -f /var/log/monit.log\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:17:26+0000] error    : Mail: Mailserver response error -- 535-5.7.8 Username and Password not accepted. For more information, go to\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:17:26+0000] error    : SMTP: Mailserver response error -- 535 5.7.8  https://support.google.com/mail/?p=BadCredentials d9443c01a7336-220d55963c0sm116820845ad.251 - gsmtp\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:17:26+0000] error    : Alert handler failed, retry scheduled for next cycle\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:17:38+0000] info     : Reinitializing monit daemon\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:17:38+0000] error    : Mail: Mailserver response error -- 535-5.7.8 Username and Password not accepted. For more information, go to\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:17:38+0000] error    : SMTP: Mailserver response error -- 535 5.7.8  https://support.google.com/mail/?p=BadCredentials 98e67ed59e1d1-2fc13b91588sm13525545a91.37 - gsmtp\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:17:38+0000] error    : Alert handler failed, retry scheduled for next cycle\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:17:38+0000] info     : Reinitializing Monit -- control file '/etc/monit/monitrc'\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:17:38+0000] info     : 'ip-172-31-6-26' Monit reloaded\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:18:43+0000] error    : 'nginx' process is not running\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:18:46+0000] info     : 'nginx' trying to restart\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:18:46+0000] info     : 'nginx' start: '/usr/sbin/service nginx start'\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:18:57+0000] info     : 'nginx' process is running with pid 13747\cf1\highlight2 
\par \cf0\highlight0 ^C\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# systemctl stop nginx\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# tail -f /var/log/monit.log\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:17:38+0000] error    : Alert handler failed, retry scheduled for next cycle\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:17:38+0000] info     : Reinitializing Monit -- control file '/etc/monit/monitrc'\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:17:38+0000] info     : 'ip-172-31-6-26' Monit reloaded\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:18:43+0000] error    : 'nginx' process is not running\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:18:46+0000] info     : 'nginx' trying to restart\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:18:46+0000] info     : 'nginx' start: '/usr/sbin/service nginx start'\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:18:57+0000] info     : 'nginx' process is running with pid 13747\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:19:29+0000] error    : 'nginx' process is not running\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:19:32+0000] info     : 'nginx' trying to restart\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:19:32+0000] info     : 'nginx' start: '/usr/sbin/service nginx start'\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:19:43+0000] info     : 'nginx' process is running with pid 14043\cf1\highlight2 
\par \cf0\highlight0 ^C\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# systemctl disable nginx\cf1\highlight2 
\par \cf0\highlight0 Synchronizing state of nginx.service with SysV service script with /lib/systemd/systemd-sysv-install.\cf1\highlight2 
\par \cf0\highlight0 Executing: /lib/systemd/systemd-sysv-install disable nginx\cf1\highlight2 
\par \cf0\highlight0 Removed /etc/systemd/system/multi-user.target.wants/nginx.service.\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# tail -f /var/log/monit.log\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:17:38+0000] info     : Reinitializing Monit -- control file '/etc/monit/monitrc'\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:17:38+0000] info     : 'ip-172-31-6-26' Monit reloaded\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:18:43+0000] error    : 'nginx' process is not running\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:18:46+0000] info     : 'nginx' trying to restart\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:18:46+0000] info     : 'nginx' start: '/usr/sbin/service nginx start'\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:18:57+0000] info     : 'nginx' process is running with pid 13747\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:19:29+0000] error    : 'nginx' process is not running\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:19:32+0000] info     : 'nginx' trying to restart\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:19:32+0000] info     : 'nginx' start: '/usr/sbin/service nginx start'\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:19:43+0000] info     : 'nginx' process is running with pid 14043\cf1\highlight2 
\par \cf0\highlight0 ^C\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# tail -f /var/log/monit.log\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:17:38+0000] info     : Reinitializing Monit -- control file '/etc/monit/monitrc'\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:17:38+0000] info     : 'ip-172-31-6-26' Monit reloaded\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:18:43+0000] error    : 'nginx' process is not running\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:18:46+0000] info     : 'nginx' trying to restart\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:18:46+0000] info     : 'nginx' start: '/usr/sbin/service nginx start'\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:18:57+0000] info     : 'nginx' process is running with pid 13747\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:19:29+0000] error    : 'nginx' process is not running\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:19:32+0000] info     : 'nginx' trying to restart\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:19:32+0000] info     : 'nginx' start: '/usr/sbin/service nginx start'\cf1\highlight2 
\par \cf0\highlight0 [2025-02-20T10:19:43+0000] info     : 'nginx' process is running with pid 14043\cf1\highlight2 
\par \cf0\highlight0 ^C\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# systemctl status nginx\cf1\highlight2 
\par \cf3\highlight0\u9679?\cf0  nginx.service - A high performance web server and a reverse proxy server\cf1\highlight2 
\par \cf0\highlight0      Loaded: loaded (/lib/systemd/system/nginx.service; disabled; vendor preset: enable\cf7\highlight8 >\cf1\highlight2 
\par \cf0\highlight0      Active: \cf3 active (running)\cf0  since Thu 2025-02-20 10:19:33 UTC; 1min 2s ago\cf1\highlight2 
\par \cf0\highlight0        Docs: man:nginx(8)\cf1\highlight2 
\par \cf0\highlight0    Main PID: 14043 (nginx)\cf1\highlight2 
\par \cf0\highlight0       Tasks: 2 (limit: 1130)\cf1\highlight2 
\par \cf0\highlight0      Memory: 2.6M\cf1\highlight2 
\par \cf0\highlight0         CPU: 21ms\cf1\highlight2 
\par \cf0\highlight0      CGroup: /system.slice/nginx.service\cf1\highlight2 
\par \cf0\highlight0              \u9500?\u9472?14043 "nginx: master process /usr/sbin/nginx -g daemon on; master_proces\cf7\highlight8 >\cf1\highlight2 
\par \cf0\highlight0              \u9492?\u9472?14044 "nginx: worker process" "" "" "" "" "" "" "" "" "" "" "" "" "" "" \cf7\highlight8 >\cf1\highlight2 
\par 
\par \cf0\highlight0 Feb 20 10:19:33 ip-172-31-6-26 systemd[1]: Starting A high performance web server and a\cf7\highlight8 >\cf1\highlight2 
\par \cf0\highlight0 Feb 20 10:19:33 ip-172-31-6-26 systemd[1]: Started A high performance web server and a \cf7\highlight8 >\cf1\highlight2 
\par 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# cat monitrc\cf1\highlight2 
\par \cf0\highlight0 ###############################################################################\cf1\highlight2 
\par \cf0\highlight0 ## Monit control file\cf1\highlight2 
\par \cf0\highlight0 ###############################################################################\cf1\highlight2 
\par \cf0\highlight0 ##\cf1\highlight2 
\par \cf0\highlight0 ## Comments begin with a '#' and extend through the end of the line. Keywords\cf1\highlight2 
\par \cf0\highlight0 ## are case insensitive. All path's MUST BE FULLY QUALIFIED, starting with '/'.\cf1\highlight2 
\par \cf0\highlight0 ##\cf1\highlight2 
\par \cf0\highlight0 ## Below you will find examples of some frequently used statements. For\cf1\highlight2 
\par \cf0\highlight0 ## information about the control file and a complete list of statements and\cf1\highlight2 
\par \cf0\highlight0 ## options, please have a look in the Monit manual.\cf1\highlight2 
\par \cf0\highlight0 ##\cf1\highlight2 
\par \cf0\highlight0 ##\cf1\highlight2 
\par \cf0\highlight0 ###############################################################################\cf1\highlight2 
\par \cf0\highlight0 ## Global section\cf1\highlight2 
\par \cf0\highlight0 ###############################################################################\cf1\highlight2 
\par \cf0\highlight0 ##\cf1\highlight2 
\par \cf0\highlight0 ## Start Monit in the background (run as a daemon):\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 set daemon  10             # check services at 120 seconds intervals\cf1\highlight2 
\par \cf0\highlight0 #   with start delay 240    # optional: delay the first check by 4-minutes (by\cf1\highlight2 
\par \cf0\highlight0 #                           # default Monit check immediately after Monit start)\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Set syslog logging. If you want to log to a standalone log file instead,\cf1\highlight2 
\par \cf0\highlight0 ## specify the full path to the log file\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 set log /var/log/monit.log\cf1\highlight2 
\par 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Set the location of the Monit lock file which stores the process id of the\cf1\highlight2 
\par \cf0\highlight0 ## running Monit instance. By default this file is stored in $HOME/.monit.pid\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 # set pidfile /var/run/monit.pid\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Set the location of the Monit id file which stores the unique id for the\cf1\highlight2 
\par \cf0\highlight0 ## Monit instance. The id is generated and stored on first Monit start. By\cf1\highlight2 
\par \cf0\highlight0 ## default the file is placed in $HOME/.monit.id.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 # set idfile /var/.monit.id\cf1\highlight2 
\par \cf0\highlight0 set idfile /var/lib/monit/id\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Set the location of the Monit state file which saves monitoring states\cf1\highlight2 
\par \cf0\highlight0 ## on each cycle. By default the file is placed in $HOME/.monit.state. If\cf1\highlight2 
\par \cf0\highlight0 ## the state file is stored on a persistent filesystem, Monit will recover\cf1\highlight2 
\par \cf0\highlight0 ## the monitoring state across reboots. If it is on temporary filesystem, the\cf1\highlight2 
\par \cf0\highlight0 ## state will be lost on reboot which may be convenient in some situations.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 # set statefile /var/.monit.state\cf1\highlight2 
\par \cf0\highlight0 set statefile /var/lib/monit/state\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par 
\par \cf0\highlight0 ## Set limits for various tests. The following example shows the default values:\cf1\highlight2 
\par \cf0\highlight0 ##\cf1\highlight2 
\par \cf0\highlight0 # set limits \{\cf1\highlight2 
\par \cf0\highlight0 #     programOutput:     512 B,      # check program's output truncate limit\cf1\highlight2 
\par \cf0\highlight0 #     sendExpectBuffer:  256 B,      # limit for send/expect protocol test\cf1\highlight2 
\par \cf0\highlight0 #     fileContentBuffer: 512 B,      # limit for file content test\cf1\highlight2 
\par \cf0\highlight0 #     httpContentBuffer: 1 MB,       # limit for HTTP content test\cf1\highlight2 
\par \cf0\highlight0 #     networkTimeout:    5 seconds   # timeout for network I/O\cf1\highlight2 
\par \cf0\highlight0 #     programTimeout:    300 seconds # timeout for check program\cf1\highlight2 
\par \cf0\highlight0 #     stopTimeout:       30 seconds  # timeout for service stop\cf1\highlight2 
\par \cf0\highlight0 #     startTimeout:      30 seconds  # timeout for service start\cf1\highlight2 
\par \cf0\highlight0 #     restartTimeout:    30 seconds  # timeout for service restart\cf1\highlight2 
\par \cf0\highlight0 # \}\cf1\highlight2 
\par 
\par \cf0\highlight0 ## Set global SSL options (just most common options showed, see manual for\cf1\highlight2 
\par \cf0\highlight0 ## full list).\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 # set ssl \{\cf1\highlight2 
\par \cf0\highlight0 #     verify     : enable, # verify SSL certificates (disabled by default but STRONGLY RECOMMENDED)\cf1\highlight2 
\par \cf0\highlight0 #     selfsigned : allow   # allow self signed SSL certificates (reject by default)\cf1\highlight2 
\par \cf0\highlight0 # \}\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Set the list of mail servers for alert delivery. Multiple servers may be\cf1\highlight2 
\par \cf0\highlight0 ## specified using a comma separator. If the first mail server fails, Monit\cf1\highlight2 
\par \cf0\highlight0 ## will use the second mail server in the list and so on. By default Monit uses\cf1\highlight2 
\par \cf0\highlight0 ## port 25 - it is possible to override this with the PORT option.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0  set mailserver smtp.gmail.com port 587\cf1\highlight2 
\par \cf0\highlight0       username "gyanaranjanmallick444@gmail.com" password "fxbx jcxt brvi rihz"\cf1\highlight2 
\par \cf0\highlight0       using tls\cf1\highlight2 
\par 
\par \cf0\highlight0  set alert gyanaranjanmallick17@gmail.com\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## By default Monit will drop alert events if no mail servers are available.\cf1\highlight2 
\par \cf0\highlight0 ## If you want to keep the alerts for later delivery retry, you can use the\cf1\highlight2 
\par \cf0\highlight0 ## EVENTQUEUE statement. The base directory where undelivered alerts will be\cf1\highlight2 
\par \cf0\highlight0 ## stored is specified by the BASEDIR option. You can limit the queue size\cf1\highlight2 
\par \cf0\highlight0 ## by using the SLOTS option (if omitted, the queue is limited by space\cf1\highlight2 
\par \cf0\highlight0 ## available in the back end filesystem).\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0  set eventqueue\cf1\highlight2 
\par \cf0\highlight0      basedir /var/lib/monit/events  # set the base directory where events will be stored\cf1\highlight2 
\par \cf0\highlight0      slots 100                      # optionally limit the queue size\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Send status and events to M/Monit (for more information about M/Monit\cf1\highlight2 
\par \cf0\highlight0 ## see https://mmonit.com/). By default Monit registers credentials with\cf1\highlight2 
\par \cf0\highlight0 ## M/Monit so M/Monit can smoothly communicate back to Monit and you don't\cf1\highlight2 
\par \cf0\highlight0 ## have to register Monit credentials manually in M/Monit. It is possible to\cf1\highlight2 
\par \cf0\highlight0 ## disable credential registration using the commented out option below.\cf1\highlight2 
\par \cf0\highlight0 ## Though, if safety is a concern we recommend instead using https when\cf1\highlight2 
\par \cf0\highlight0 ## communicating with M/Monit and send credentials encrypted. The password\cf1\highlight2 
\par \cf0\highlight0 ## should be URL encoded if it contains URL-significant characters like\cf1\highlight2 
\par \cf0\highlight0 ## ":", "?", "@". Default timeout is 5 seconds, you can customize it by\cf1\highlight2 
\par \cf0\highlight0 ## adding the timeout option.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 # set mmonit http://monit:monit@192.168.1.10:8080/collector\cf1\highlight2 
\par \cf0\highlight0 #     # with timeout 30 seconds              # Default timeout is 5 seconds\cf1\highlight2 
\par \cf0\highlight0 #     # and register without credentials     # Don't register credentials\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Monit by default uses the following format for alerts if the mail-format\cf1\highlight2 
\par \cf0\highlight0 ## statement is missing::\cf1\highlight2 
\par \cf0\highlight0 ## --8<--\cf1\highlight2 
\par \cf0\highlight0 ## set mail-format \{\cf1\highlight2 
\par \cf0\highlight0 ##   from:    Monit <monit@$HOST>\cf1\highlight2 
\par \cf0\highlight0 ##   subject: monit alert --  $EVENT $SERVICE\cf1\highlight2 
\par \cf0\highlight0 ##   message: $EVENT Service $SERVICE\cf1\highlight2 
\par \cf0\highlight0 ##                 Date:        $DATE\cf1\highlight2 
\par \cf0\highlight0 ##                 Action:      $ACTION\cf1\highlight2 
\par \cf0\highlight0 ##                 Host:        $HOST\cf1\highlight2 
\par \cf0\highlight0 ##                 Description: $DESCRIPTION\cf1\highlight2 
\par \cf0\highlight0 ##\cf1\highlight2 
\par \cf0\highlight0 ##            Your faithful employee,\cf1\highlight2 
\par \cf0\highlight0 ##            Monit\cf1\highlight2 
\par \cf0\highlight0 ## \}\cf1\highlight2 
\par \cf0\highlight0 ## --8<--\cf1\highlight2 
\par \cf0\highlight0 ##\cf1\highlight2 
\par \cf0\highlight0 ## You can override this message format or parts of it, such as subject\cf1\highlight2 
\par \cf0\highlight0 ## or sender using the MAIL-FORMAT statement. Macros such as $DATE, etc.\cf1\highlight2 
\par \cf0\highlight0 ## are expanded at runtime. For example, to override the sender, use:\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 # set mail-format \{ from: monit@foo.bar \}\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## You can set alert recipients whom will receive alerts if/when a\cf1\highlight2 
\par \cf0\highlight0 ## service defined in this file has errors. Alerts may be restricted on\cf1\highlight2 
\par \cf0\highlight0 ## events by using a filter as in the second example below.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 # set alert sysadm@foo.bar                       # receive all alerts\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Do not alert when Monit starts, stops or performs a user initiated action.\cf1\highlight2 
\par \cf0\highlight0 ## This filter is recommended to avoid getting alerts for trivial cases.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 # set alert your-name@your.domain not on \{ instance, action \}\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Monit has an embedded HTTP interface which can be used to view status of\cf1\highlight2 
\par \cf0\highlight0 ## services monitored and manage services from a web interface. The HTTP\cf1\highlight2 
\par \cf0\highlight0 ## interface is also required if you want to issue Monit commands from the\cf1\highlight2 
\par \cf0\highlight0 ## command line, such as 'monit status' or 'monit restart service' The reason\cf1\highlight2 
\par \cf0\highlight0 ## for this is that the Monit client uses the HTTP interface to send these\cf1\highlight2 
\par \cf0\highlight0 ## commands to a running Monit daemon. See the Monit Wiki if you want to\cf1\highlight2 
\par \cf0\highlight0 ## enable SSL for the HTTP interface.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 set httpd port 2812 and\cf1\highlight2 
\par \cf0\highlight0     use address 172.31.6.26  # only accept connection from localhost (drop if you use M/Monit)\cf1\highlight2 
\par \cf0\highlight0     allow 0.0.0.0/0        # allow localhost to connect to the server and\cf1\highlight2 
\par \cf0\highlight0     allow admin:monit      # require user 'admin' with password 'monit'\cf1\highlight2 
\par \cf0\highlight0 #    #with ssl \{            # enable SSL/TLS and set path to server certificate\cf1\highlight2 
\par \cf0\highlight0 #    #    pemfile: /etc/ssl/certs/monit.pem\cf1\highlight2 
\par \cf0\highlight0 #    #\}\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Monit can perform act differently regarding services previous state when\cf1\highlight2 
\par \cf0\highlight0 ## going back in duty. By default, Monit will 'start' all services. Monit can\cf1\highlight2 
\par \cf0\highlight0 ## also takes no action to start services in 'nostart' mode. Monit can try to\cf1\highlight2 
\par \cf0\highlight0 ## restore the 'laststate' of the service when Monit was shutdown.\cf1\highlight2 
\par \cf0\highlight0 # set onreboot start # start, nostart, laststart\cf1\highlight2 
\par 
\par \cf0\highlight0 ###############################################################################\cf1\highlight2 
\par \cf0\highlight0 ## Services\cf1\highlight2 
\par \cf0\highlight0 ###############################################################################\cf1\highlight2 
\par \cf0\highlight0 ##\cf1\highlight2 
\par \cf0\highlight0 ## Check general system resources such as load average, cpu and memory\cf1\highlight2 
\par \cf0\highlight0 ## usage. Each test specifies a resource, conditions and the action to be\cf1\highlight2 
\par \cf0\highlight0 ## performed should a test fail.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #  check system $HOST\cf1\highlight2 
\par \cf0\highlight0 #    if loadavg (1min) per core > 2 for 5 cycles then alert\cf1\highlight2 
\par \cf0\highlight0 #    if loadavg (5min) per core > 1.5 for 10 cycles then alert\cf1\highlight2 
\par \cf0\highlight0 #    if cpu usage > 95% for 10 cycles then alert\cf1\highlight2 
\par \cf0\highlight0 #    if memory usage > 75% then alert\cf1\highlight2 
\par \cf0\highlight0 #    if swap usage > 25% then alert\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Check if a file exists, checksum, permissions, uid and gid. In addition\cf1\highlight2 
\par \cf0\highlight0 ## to alert recipients in the global section, customized alert can be sent to\cf1\highlight2 
\par \cf0\highlight0 ## additional recipients by specifying a local alert handler. The service may\cf1\highlight2 
\par \cf0\highlight0 ## be grouped using the GROUP option. More than one group can be specified by\cf1\highlight2 
\par \cf0\highlight0 ## repeating the 'group name' statement.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #  check file apache_bin with path /usr/local/apache/bin/httpd\cf1\highlight2 
\par \cf0\highlight0 #    if failed checksum and\cf1\highlight2 
\par \cf0\highlight0 #       expect the sum 8f7f419955cefa0b33a2ba316cba3659 then unmonitor\cf1\highlight2 
\par \cf0\highlight0 #    if failed permission 755 then unmonitor\cf1\highlight2 
\par \cf0\highlight0 #    if failed uid "root" then unmonitor\cf1\highlight2 
\par \cf0\highlight0 #    if failed gid "root" then unmonitor\cf1\highlight2 
\par \cf0\highlight0 #    alert security@foo.bar on \{\cf1\highlight2 
\par \cf0\highlight0 #           checksum, permission, uid, gid, unmonitor\cf1\highlight2 
\par \cf0\highlight0 #        \} with the mail-format \{ subject: Alarm! \}\cf1\highlight2 
\par \cf0\highlight0 #    group server\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Check that a process is running, in this case Apache, and that it respond\cf1\highlight2 
\par \cf0\highlight0 ## to HTTP and HTTPS requests. Check its resource usage such as cpu and memory,\cf1\highlight2 
\par \cf0\highlight0 ## and number of children. If the process is not running, Monit will restart\cf1\highlight2 
\par \cf0\highlight0 ## it by default. In case the service is restarted very often and the\cf1\highlight2 
\par \cf0\highlight0 ## problem remains, it is possible to disable monitoring using the TIMEOUT\cf1\highlight2 
\par \cf0\highlight0 ## statement. This service depends on another service (apache_bin) which\cf1\highlight2 
\par \cf0\highlight0 ## is defined above.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #  check process apache with pidfile /usr/local/apache/logs/httpd.pid\cf1\highlight2 
\par \cf0\highlight0 #    start program = "/etc/init.d/httpd start" with timeout 60 seconds\cf1\highlight2 
\par \cf0\highlight0 #    stop program  = "/etc/init.d/httpd stop"\cf1\highlight2 
\par \cf0\highlight0 #    if cpu > 60% for 2 cycles then alert\cf1\highlight2 
\par \cf0\highlight0 #    if cpu > 80% for 5 cycles then restart\cf1\highlight2 
\par \cf0\highlight0 #    if totalmem > 200.0 MB for 5 cycles then restart\cf1\highlight2 
\par \cf0\highlight0 #    if children > 250 then restart\cf1\highlight2 
\par \cf0\highlight0 #    if disk read > 500 kb/s for 10 cycles then alert\cf1\highlight2 
\par \cf0\highlight0 #    if disk write > 500 kb/s for 10 cycles then alert\cf1\highlight2 
\par \cf0\highlight0 #    if failed host www.tildeslash.com port 80 protocol http and request "/somefile.html" then restart\cf1\highlight2 
\par \cf0\highlight0 #    if failed port 443 protocol https with timeout 15 seconds then restart\cf1\highlight2 
\par \cf0\highlight0 #    if 3 restarts within 5 cycles then unmonitor\cf1\highlight2 
\par \cf0\highlight0 #    depends on apache_bin\cf1\highlight2 
\par \cf0\highlight0 #    group server\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Check filesystem permissions, uid, gid, space usage, inode usage and disk I/O.\cf1\highlight2 
\par \cf0\highlight0 ## Other services, such as databases, may depend on this resource and an automatically\cf1\highlight2 
\par \cf0\highlight0 ## graceful stop may be cascaded to them before the filesystem will become full and data\cf1\highlight2 
\par \cf0\highlight0 ## lost.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #  check filesystem datafs with path /dev/sdb1\cf1\highlight2 
\par \cf0\highlight0 #    start program  = "/bin/mount /data"\cf1\highlight2 
\par \cf0\highlight0 #    stop program  = "/bin/umount /data"\cf1\highlight2 
\par \cf0\highlight0 #    if failed permission 660 then unmonitor\cf1\highlight2 
\par \cf0\highlight0 #    if failed uid "root" then unmonitor\cf1\highlight2 
\par \cf0\highlight0 #    if failed gid "disk" then unmonitor\cf1\highlight2 
\par \cf0\highlight0 #    if space usage > 80% for 5 times within 15 cycles then alert\cf1\highlight2 
\par \cf0\highlight0 #    if space usage > 99% then stop\cf1\highlight2 
\par \cf0\highlight0 #    if inode usage > 30000 then alert\cf1\highlight2 
\par \cf0\highlight0 #    if inode usage > 99% then stop\cf1\highlight2 
\par \cf0\highlight0 #    if read rate > 1 MB/s for 5 cycles then alert\cf1\highlight2 
\par \cf0\highlight0 #    if read rate > 500 operations/s for 5 cycles then alert\cf1\highlight2 
\par \cf0\highlight0 #    if write rate > 1 MB/s for 5 cycles then alert\cf1\highlight2 
\par \cf0\highlight0 #    if write rate > 500 operations/s for 5 cycles then alert\cf1\highlight2 
\par \cf0\highlight0 #    if service time > 10 milliseconds for 3 times within 5 cycles then alert\cf1\highlight2 
\par \cf0\highlight0 #    group server\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Check a file's timestamp. In this example, we test if a file is older\cf1\highlight2 
\par \cf0\highlight0 ## than 15 minutes and assume something is wrong if its not updated. Also,\cf1\highlight2 
\par \cf0\highlight0 ## if the file size exceed a given limit, execute a script\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #  check file database with path /data/mydatabase.db\cf1\highlight2 
\par \cf0\highlight0 #    if failed permission 700 then alert\cf1\highlight2 
\par \cf0\highlight0 #    if failed uid "data" then alert\cf1\highlight2 
\par \cf0\highlight0 #    if failed gid "data" then alert\cf1\highlight2 
\par \cf0\highlight0 #    if timestamp > 15 minutes then alert\cf1\highlight2 
\par \cf0\highlight0 #    if size > 100 MB then exec "/my/cleanup/script" as uid dba and gid dba\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Check directory permission, uid and gid.  An event is triggered if the\cf1\highlight2 
\par \cf0\highlight0 ## directory does not belong to the user with uid 0 and gid 0.  In addition,\cf1\highlight2 
\par \cf0\highlight0 ## the permissions have to match the octal description of 755 (see chmod(1)).\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #  check directory bin with path /bin\cf1\highlight2 
\par \cf0\highlight0 #    if failed permission 755 then unmonitor\cf1\highlight2 
\par \cf0\highlight0 #    if failed uid 0 then unmonitor\cf1\highlight2 
\par \cf0\highlight0 #    if failed gid 0 then unmonitor\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Check a remote host availability by issuing a ping test and check the\cf1\highlight2 
\par \cf0\highlight0 ## content of a response from a web server. Up to three pings are sent and\cf1\highlight2 
\par \cf0\highlight0 ## connection to a port and an application level network check is performed.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #  check host myserver with address 192.168.1.1\cf1\highlight2 
\par \cf0\highlight0 #    if failed ping then alert\cf1\highlight2 
\par \cf0\highlight0 #    if failed port 3306 protocol mysql with timeout 15 seconds then alert\cf1\highlight2 
\par \cf0\highlight0 #    if failed port 80 protocol http\cf1\highlight2 
\par \cf0\highlight0 #       and request /some/path with content = "a string"\cf1\highlight2 
\par \cf0\highlight0 #    then alert\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Check a network link status (up/down), link capacity changes, saturation\cf1\highlight2 
\par \cf0\highlight0 ## and bandwidth usage.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #  check network public with interface eth0\cf1\highlight2 
\par \cf0\highlight0 #    if link down then alert\cf1\highlight2 
\par \cf0\highlight0 #    if changed link then alert\cf1\highlight2 
\par \cf0\highlight0 #    if saturation > 90% then alert\cf1\highlight2 
\par \cf0\highlight0 #    if download > 10 MB/s then alert\cf1\highlight2 
\par \cf0\highlight0 #    if total uploaded > 1 GB in last hour then alert\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Check custom program status output.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #  check program myscript with path /usr/local/bin/myscript.sh\cf1\highlight2 
\par \cf0\highlight0 #    if status != 0 then alert\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ###############################################################################\cf1\highlight2 
\par \cf0\highlight0 ## Includes\cf1\highlight2 
\par \cf0\highlight0 ###############################################################################\cf1\highlight2 
\par \cf0\highlight0 ##\cf1\highlight2 
\par \cf0\highlight0 ## It is possible to include additional configuration parts from other files or\cf1\highlight2 
\par \cf0\highlight0 ## directories.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #  include /etc/monit.d/*\cf1\highlight2 
\par \cf0\highlight0 include /etc/monit/conf.d/*\cf1\highlight2 
\par \cf0\highlight0 include /etc/monit/conf-enabled/*\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# cd ..\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc# cd monit/\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# cd conf.d/\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit/conf.d# ls\cf1\highlight2 
\par \cf0\highlight0 nginx\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit/conf.d# cat nginx\cf1\highlight2 
\par \cf0\highlight0 check process nginx with pidfile /run/nginx.pid\cf1\highlight2 
\par \cf0\highlight0           start program = "/usr/sbin/service nginx start" with timeout 60 seconds\cf1\highlight2 
\par \cf0\highlight0           stop program = "/usr/sbin/service nginx stop"\cf1\highlight2 
\par \cf0\highlight0           if failed host 127.0.0.1 port 80 protocol http then alert\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit/conf.d# history\cf1\highlight2 
\par \cf0\highlight0     1  apt update\cf1\highlight2 
\par \cf0\highlight0     2  sudo apt install monit -y\cf1\highlight2 
\par \cf0\highlight0     3  sudo systemctl status monit.service\cf1\highlight2 
\par \cf0\highlight0     4  cd /etc/monit/\cf1\highlight2 
\par \cf0\highlight0     5  vi monitrc\cf1\highlight2 
\par \cf0\highlight0     6  monit -t\cf1\highlight2 
\par \cf0\highlight0     7  monit reload\cf1\highlight2 
\par \cf0\highlight0     8  apt install nginx\cf1\highlight2 
\par \cf0\highlight0     9  systemctl status nginx\cf1\highlight2 
\par \cf0\highlight0    10  ls\cf1\highlight2 
\par \cf0\highlight0    11  cd conf.d/\cf1\highlight2 
\par \cf0\highlight0    12  vi nginx\cf1\highlight2 
\par \cf0\highlight0    13  monit -t\cf1\highlight2 
\par \cf0\highlight0    14  monit reload\cf1\highlight2 
\par \cf0\highlight0    15  cd ..\cf1\highlight2 
\par \cf0\highlight0    16  vi monitrc\cf1\highlight2 
\par \cf0\highlight0    17  monit -t\cf1\highlight2 
\par \cf0\highlight0    18  monit reload\cf1\highlight2 
\par \cf0\highlight0    19  cd ..\cf1\highlight2 
\par \cf0\highlight0    20  cd monit/\cf1\highlight2 
\par \cf0\highlight0    21  ls\cf1\highlight2 
\par \cf0\highlight0    22  cd conf.d/\cf1\highlight2 
\par \cf0\highlight0    23  ls\cf1\highlight2 
\par \cf0\highlight0    24  cat nginx\cf1\highlight2 
\par \cf0\highlight0    25  vi nginx\cf1\highlight2 
\par \cf0\highlight0    26  monit -t\cf1\highlight2 
\par \cf0\highlight0    27  monit reload\cf1\highlight2 
\par \cf0\highlight0    28  systemctl stop nginx\cf1\highlight2 
\par \cf0\highlight0    29  tail -f /var/log/monit.log\cf1\highlight2 
\par \cf0\highlight0    30  cd ..\cf1\highlight2 
\par \cf0\highlight0    31  cat monitrc\cf1\highlight2 
\par \cf0\highlight0    32  vi monitrc\cf1\highlight2 
\par \cf0\highlight0    33  monit -t\cf1\highlight2 
\par \cf0\highlight0    34  monit reload\cf1\highlight2 
\par \cf0\highlight0    35  systemctl start nginx\cf1\highlight2 
\par \cf0\highlight0    36  systemctl status nginx\cf1\highlight2 
\par \cf0\highlight0    37  tail -f /var/log/monit.log\cf1\highlight2 
\par \cf0\highlight0    38  systemctl stop nginx\cf1\highlight2 
\par \cf0\highlight0    39  tail -f /var/log/monit.log\cf1\highlight2 
\par \cf0\highlight0    40  systemctl stop nginx\cf1\highlight2 
\par \cf0\highlight0    41  tail -f /var/log/monit.log\cf1\highlight2 
\par \cf0\highlight0    42  systemctl disable nginx\cf1\highlight2 
\par \cf0\highlight0    43  tail -f /var/log/monit.log\cf1\highlight2 
\par \cf0\highlight0    44  systemctl status nginx\cf1\highlight2 
\par \cf0\highlight0    45  cat monitrc\cf1\highlight2 
\par \cf0\highlight0    46  cd ..\cf1\highlight2 
\par \cf0\highlight0    47  cd monit/\cf1\highlight2 
\par \cf0\highlight0    48  cd conf.d/\cf1\highlight2 
\par \cf0\highlight0    49  ls\cf1\highlight2 
\par \cf0\highlight0    50  cat nginx\cf1\highlight2 
\par \cf0\highlight0    51  history\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit/conf.d# ^C\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit/conf.d# cd ..\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# ls\cf1\highlight2 
\par \cf9\highlight0 conf-available\cf0   \cf9 conf-enabled\cf0   \cf9 conf.d\cf0   monitrc  \cf9 templates\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# vi monitrc\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# monit -t\cf1\highlight2 
\par \cf0\highlight0 /etc/monit/monitrc:86: syntax error 'jeevard001@gmail.com'\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# vi monitrc\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# monit -t\cf1\highlight2 
\par \cf0\highlight0 /etc/monit/monitrc:86: syntax error 'jeevard001@gmail.com'\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# vi monitrc\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# monit -t\cf1\highlight2 
\par \cf0\highlight0 /etc/monit/monitrc:86: syntax error 'jeevard001@gmail.com'\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# vi monitrc\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# monit -t\cf1\highlight2 
\par \cf0\highlight0 /etc/monit/monitrc:119: syntax error '--8<--'\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# vi monitrc\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# monit -t\cf1\highlight2 
\par \cf0\highlight0 Control file syntax OK\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# monit reload\cf1\highlight2 
\par \cf0\highlight0 Reinitializing monit daemon\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# systemctl stop nginx\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit# cat monitrc\cf1\highlight2 
\par \cf0\highlight0 ###############################################################################\cf1\highlight2 
\par \cf0\highlight0 ## Monit control file\cf1\highlight2 
\par \cf0\highlight0 ###############################################################################\cf1\highlight2 
\par \cf0\highlight0 ##\cf1\highlight2 
\par \cf0\highlight0 ## Comments begin with a '#' and extend through the end of the line. Keywords\cf1\highlight2 
\par \cf0\highlight0 ## are case insensitive. All path's MUST BE FULLY QUALIFIED, starting with '/'.\cf1\highlight2 
\par \cf0\highlight0 ##\cf1\highlight2 
\par \cf0\highlight0 ## Below you will find examples of some frequently used statements. For\cf1\highlight2 
\par \cf0\highlight0 ## information about the control file and a complete list of statements and\cf1\highlight2 
\par \cf0\highlight0 ## options, please have a look in the Monit manual.\cf1\highlight2 
\par \cf0\highlight0 ##\cf1\highlight2 
\par \cf0\highlight0 ##\cf1\highlight2 
\par \cf0\highlight0 ###############################################################################\cf1\highlight2 
\par \cf0\highlight0 ## Global section\cf1\highlight2 
\par \cf0\highlight0 ###############################################################################\cf1\highlight2 
\par \cf0\highlight0 ##\cf1\highlight2 
\par \cf0\highlight0 ## Start Monit in the background (run as a daemon):\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 set daemon  10             # check services at 120 seconds intervals\cf1\highlight2 
\par \cf0\highlight0 #   with start delay 240    # optional: delay the first check by 4-minutes (by\cf1\highlight2 
\par \cf0\highlight0 #                           # default Monit check immediately after Monit start)\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Set syslog logging. If you want to log to a standalone log file instead,\cf1\highlight2 
\par \cf0\highlight0 ## specify the full path to the log file\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 set log /var/log/monit.log\cf1\highlight2 
\par 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Set the location of the Monit lock file which stores the process id of the\cf1\highlight2 
\par \cf0\highlight0 ## running Monit instance. By default this file is stored in $HOME/.monit.pid\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 # set pidfile /var/run/monit.pid\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Set the location of the Monit id file which stores the unique id for the\cf1\highlight2 
\par \cf0\highlight0 ## Monit instance. The id is generated and stored on first Monit start. By\cf1\highlight2 
\par \cf0\highlight0 ## default the file is placed in $HOME/.monit.id.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 # set idfile /var/.monit.id\cf1\highlight2 
\par \cf0\highlight0 set idfile /var/lib/monit/id\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Set the location of the Monit state file which saves monitoring states\cf1\highlight2 
\par \cf0\highlight0 ## on each cycle. By default the file is placed in $HOME/.monit.state. If\cf1\highlight2 
\par \cf0\highlight0 ## the state file is stored on a persistent filesystem, Monit will recover\cf1\highlight2 
\par \cf0\highlight0 ## the monitoring state across reboots. If it is on temporary filesystem, the\cf1\highlight2 
\par \cf0\highlight0 ## state will be lost on reboot which may be convenient in some situations.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 # set statefile /var/.monit.state\cf1\highlight2 
\par \cf0\highlight0 set statefile /var/lib/monit/state\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par 
\par \cf0\highlight0 ## Set limits for various tests. The following example shows the default values:\cf1\highlight2 
\par \cf0\highlight0 ##\cf1\highlight2 
\par \cf0\highlight0 # set limits \{\cf1\highlight2 
\par \cf0\highlight0 #     programOutput:     512 B,      # check program's output truncate limit\cf1\highlight2 
\par \cf0\highlight0 #     sendExpectBuffer:  256 B,      # limit for send/expect protocol test\cf1\highlight2 
\par \cf0\highlight0 #     fileContentBuffer: 512 B,      # limit for file content test\cf1\highlight2 
\par \cf0\highlight0 #     httpContentBuffer: 1 MB,       # limit for HTTP content test\cf1\highlight2 
\par \cf0\highlight0 #     networkTimeout:    5 seconds   # timeout for network I/O\cf1\highlight2 
\par \cf0\highlight0 #     programTimeout:    300 seconds # timeout for check program\cf1\highlight2 
\par \cf0\highlight0 #     stopTimeout:       30 seconds  # timeout for service stop\cf1\highlight2 
\par \cf0\highlight0 #     startTimeout:      30 seconds  # timeout for service start\cf1\highlight2 
\par \cf0\highlight0 #     restartTimeout:    30 seconds  # timeout for service restart\cf1\highlight2 
\par \cf0\highlight0 # \}\cf1\highlight2 
\par 
\par \cf0\highlight0 ## Set global SSL options (just most common options showed, see manual for\cf1\highlight2 
\par \cf0\highlight0 ## full list).\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 # set ssl \{\cf1\highlight2 
\par \cf0\highlight0 #     verify     : enable, # verify SSL certificates (disabled by default but STRONGLY RECOMMENDED)\cf1\highlight2 
\par \cf0\highlight0 #     selfsigned : allow   # allow self signed SSL certificates (reject by default)\cf1\highlight2 
\par \cf0\highlight0 # \}\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Set the list of mail servers for alert delivery. Multiple servers may be\cf1\highlight2 
\par \cf0\highlight0 ## specified using a comma separator. If the first mail server fails, Monit\cf1\highlight2 
\par \cf0\highlight0 ## will use the second mail server in the list and so on. By default Monit uses\cf1\highlight2 
\par \cf0\highlight0 ## port 25 - it is possible to override this with the PORT option.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0  set mailserver smtp.gmail.com port 587\cf1\highlight2 
\par \cf0\highlight0       username "gyanaranjanmallick444@gmail.com" password "fxbx jcxt brvi rihz"\cf1\highlight2 
\par \cf0\highlight0       using tls\cf1\highlight2 
\par 
\par \cf0\highlight0  set alert gyanaranjanmallick17@gmail.com\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## By default Monit will drop alert events if no mail servers are available.\cf1\highlight2 
\par \cf0\highlight0 ## If you want to keep the alerts for later delivery retry, you can use the\cf1\highlight2 
\par \cf0\highlight0 ## EVENTQUEUE statement. The base directory where undelivered alerts will be\cf1\highlight2 
\par \cf0\highlight0 ## stored is specified by the BASEDIR option. You can limit the queue size\cf1\highlight2 
\par \cf0\highlight0 ## by using the SLOTS option (if omitted, the queue is limited by space\cf1\highlight2 
\par \cf0\highlight0 ## available in the back end filesystem).\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0  set eventqueue\cf1\highlight2 
\par \cf0\highlight0      basedir /var/lib/monit/events  # set the base directory where events will be stored\cf1\highlight2 
\par \cf0\highlight0      slots 100                      # optionally limit the queue size\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Send status and events to M/Monit (for more information about M/Monit\cf1\highlight2 
\par \cf0\highlight0 ## see https://mmonit.com/). By default Monit registers credentials with\cf1\highlight2 
\par \cf0\highlight0 ## M/Monit so M/Monit can smoothly communicate back to Monit and you don't\cf1\highlight2 
\par \cf0\highlight0 ## have to register Monit credentials manually in M/Monit. It is possible to\cf1\highlight2 
\par \cf0\highlight0 ## disable credential registration using the commented out option below.\cf1\highlight2 
\par \cf0\highlight0 ## Though, if safety is a concern we recommend instead using https when\cf1\highlight2 
\par \cf0\highlight0 ## communicating with M/Monit and send credentials encrypted. The password\cf1\highlight2 
\par \cf0\highlight0 ## should be URL encoded if it contains URL-significant characters like\cf1\highlight2 
\par \cf0\highlight0 ## ":", "?", "@". Default timeout is 5 seconds, you can customize it by\cf1\highlight2 
\par \cf0\highlight0 ## adding the timeout option.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 # set mmonit http://monit:monit@192.168.1.10:8080/collector\cf1\highlight2 
\par \cf0\highlight0 #     # with timeout 30 seconds              # Default timeout is 5 seconds\cf1\highlight2 
\par \cf0\highlight0 #     # and register without credentials     # Don't register credentials\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Monit by default uses the following format for alerts if the mail-format\cf1\highlight2 
\par \cf0\highlight0 ## statement is missing::\cf1\highlight2 
\par \cf0\highlight0 ## --8<--\cf1\highlight2 
\par \cf0\highlight0  set mail-format \{\cf1\highlight2 
\par \cf0\highlight0    from:    Monit <monit@$HOST>\cf1\highlight2 
\par \cf0\highlight0    subject: monit alert --  $EVENT $SERVICE\cf1\highlight2 
\par \cf0\highlight0    message: $EVENT Service $SERVICE\cf1\highlight2 
\par \cf0\highlight0                  Date:        $DATE\cf1\highlight2 
\par \cf0\highlight0                  Action:      $ACTION\cf1\highlight2 
\par \cf0\highlight0                  Host:        $HOST\cf1\highlight2 
\par \cf0\highlight0                  Description: $DESCRIPTION\cf1\highlight2 
\par 
\par \cf0\highlight0             Your faithful employee,\cf1\highlight2 
\par \cf0\highlight0             Monit\cf1\highlight2 
\par \cf0\highlight0  \}\cf1\highlight2 
\par \cf0\highlight0 ## --8<--\cf1\highlight2 
\par \cf0\highlight0 ##\cf1\highlight2 
\par \cf0\highlight0 ## You can override this message format or parts of it, such as subject\cf1\highlight2 
\par \cf0\highlight0 ## or sender using the MAIL-FORMAT statement. Macros such as $DATE, etc.\cf1\highlight2 
\par \cf0\highlight0 ## are expanded at runtime. For example, to override the sender, use:\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 # set mail-format \{ from: monit@foo.bar \}\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## You can set alert recipients whom will receive alerts if/when a\cf1\highlight2 
\par \cf0\highlight0 ## service defined in this file has errors. Alerts may be restricted on\cf1\highlight2 
\par \cf0\highlight0 ## events by using a filter as in the second example below.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 # set alert sysadm@foo.bar                       # receive all alerts\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Do not alert when Monit starts, stops or performs a user initiated action.\cf1\highlight2 
\par \cf0\highlight0 ## This filter is recommended to avoid getting alerts for trivial cases.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 # set alert your-name@your.domain not on \{ instance, action \}\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Monit has an embedded HTTP interface which can be used to view status of\cf1\highlight2 
\par \cf0\highlight0 ## services monitored and manage services from a web interface. The HTTP\cf1\highlight2 
\par \cf0\highlight0 ## interface is also required if you want to issue Monit commands from the\cf1\highlight2 
\par \cf0\highlight0 ## command line, such as 'monit status' or 'monit restart service' The reason\cf1\highlight2 
\par \cf0\highlight0 ## for this is that the Monit client uses the HTTP interface to send these\cf1\highlight2 
\par \cf0\highlight0 ## commands to a running Monit daemon. See the Monit Wiki if you want to\cf1\highlight2 
\par \cf0\highlight0 ## enable SSL for the HTTP interface.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 set httpd port 2812 and\cf1\highlight2 
\par \cf0\highlight0     use address 172.31.6.26  # only accept connection from localhost (drop if you use M/Monit)\cf1\highlight2 
\par \cf0\highlight0     allow 0.0.0.0/0        # allow localhost to connect to the server and\cf1\highlight2 
\par \cf0\highlight0     allow admin:monit      # require user 'admin' with password 'monit'\cf1\highlight2 
\par \cf0\highlight0 #    #with ssl \{            # enable SSL/TLS and set path to server certificate\cf1\highlight2 
\par \cf0\highlight0 #    #    pemfile: /etc/ssl/certs/monit.pem\cf1\highlight2 
\par \cf0\highlight0 #    #\}\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Monit can perform act differently regarding services previous state when\cf1\highlight2 
\par \cf0\highlight0 ## going back in duty. By default, Monit will 'start' all services. Monit can\cf1\highlight2 
\par \cf0\highlight0 ## also takes no action to start services in 'nostart' mode. Monit can try to\cf1\highlight2 
\par \cf0\highlight0 ## restore the 'laststate' of the service when Monit was shutdown.\cf1\highlight2 
\par \cf0\highlight0 # set onreboot start # start, nostart, laststart\cf1\highlight2 
\par 
\par \cf0\highlight0 ###############################################################################\cf1\highlight2 
\par \cf0\highlight0 ## Services\cf1\highlight2 
\par \cf0\highlight0 ###############################################################################\cf1\highlight2 
\par \cf0\highlight0 ##\cf1\highlight2 
\par \cf0\highlight0 ## Check general system resources such as load average, cpu and memory\cf1\highlight2 
\par \cf0\highlight0 ## usage. Each test specifies a resource, conditions and the action to be\cf1\highlight2 
\par \cf0\highlight0 ## performed should a test fail.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #  check system $HOST\cf1\highlight2 
\par \cf0\highlight0 #    if loadavg (1min) per core > 2 for 5 cycles then alert\cf1\highlight2 
\par \cf0\highlight0 #    if loadavg (5min) per core > 1.5 for 10 cycles then alert\cf1\highlight2 
\par \cf0\highlight0 #    if cpu usage > 95% for 10 cycles then alert\cf1\highlight2 
\par \cf0\highlight0 #    if memory usage > 75% then alert\cf1\highlight2 
\par \cf0\highlight0 #    if swap usage > 25% then alert\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Check if a file exists, checksum, permissions, uid and gid. In addition\cf1\highlight2 
\par \cf0\highlight0 ## to alert recipients in the global section, customized alert can be sent to\cf1\highlight2 
\par \cf0\highlight0 ## additional recipients by specifying a local alert handler. The service may\cf1\highlight2 
\par \cf0\highlight0 ## be grouped using the GROUP option. More than one group can be specified by\cf1\highlight2 
\par \cf0\highlight0 ## repeating the 'group name' statement.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #  check file apache_bin with path /usr/local/apache/bin/httpd\cf1\highlight2 
\par \cf0\highlight0 #    if failed checksum and\cf1\highlight2 
\par \cf0\highlight0 #       expect the sum 8f7f419955cefa0b33a2ba316cba3659 then unmonitor\cf1\highlight2 
\par \cf0\highlight0 #    if failed permission 755 then unmonitor\cf1\highlight2 
\par \cf0\highlight0 #    if failed uid "root" then unmonitor\cf1\highlight2 
\par \cf0\highlight0 #    if failed gid "root" then unmonitor\cf1\highlight2 
\par \cf0\highlight0 #    alert security@foo.bar on \{\cf1\highlight2 
\par \cf0\highlight0 #           checksum, permission, uid, gid, unmonitor\cf1\highlight2 
\par \cf0\highlight0 #        \} with the mail-format \{ subject: Alarm! \}\cf1\highlight2 
\par \cf0\highlight0 #    group server\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Check that a process is running, in this case Apache, and that it respond\cf1\highlight2 
\par \cf0\highlight0 ## to HTTP and HTTPS requests. Check its resource usage such as cpu and memory,\cf1\highlight2 
\par \cf0\highlight0 ## and number of children. If the process is not running, Monit will restart\cf1\highlight2 
\par \cf0\highlight0 ## it by default. In case the service is restarted very often and the\cf1\highlight2 
\par \cf0\highlight0 ## problem remains, it is possible to disable monitoring using the TIMEOUT\cf1\highlight2 
\par \cf0\highlight0 ## statement. This service depends on another service (apache_bin) which\cf1\highlight2 
\par \cf0\highlight0 ## is defined above.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #  check process apache with pidfile /usr/local/apache/logs/httpd.pid\cf1\highlight2 
\par \cf0\highlight0 #    start program = "/etc/init.d/httpd start" with timeout 60 seconds\cf1\highlight2 
\par \cf0\highlight0 #    stop program  = "/etc/init.d/httpd stop"\cf1\highlight2 
\par \cf0\highlight0 #    if cpu > 60% for 2 cycles then alert\cf1\highlight2 
\par \cf0\highlight0 #    if cpu > 80% for 5 cycles then restart\cf1\highlight2 
\par \cf0\highlight0 #    if totalmem > 200.0 MB for 5 cycles then restart\cf1\highlight2 
\par \cf0\highlight0 #    if children > 250 then restart\cf1\highlight2 
\par \cf0\highlight0 #    if disk read > 500 kb/s for 10 cycles then alert\cf1\highlight2 
\par \cf0\highlight0 #    if disk write > 500 kb/s for 10 cycles then alert\cf1\highlight2 
\par \cf0\highlight0 #    if failed host www.tildeslash.com port 80 protocol http and request "/somefile.html" then restart\cf1\highlight2 
\par \cf0\highlight0 #    if failed port 443 protocol https with timeout 15 seconds then restart\cf1\highlight2 
\par \cf0\highlight0 #    if 3 restarts within 5 cycles then unmonitor\cf1\highlight2 
\par \cf0\highlight0 #    depends on apache_bin\cf1\highlight2 
\par \cf0\highlight0 #    group server\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Check filesystem permissions, uid, gid, space usage, inode usage and disk I/O.\cf1\highlight2 
\par \cf0\highlight0 ## Other services, such as databases, may depend on this resource and an automatically\cf1\highlight2 
\par \cf0\highlight0 ## graceful stop may be cascaded to them before the filesystem will become full and data\cf1\highlight2 
\par \cf0\highlight0 ## lost.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #  check filesystem datafs with path /dev/sdb1\cf1\highlight2 
\par \cf0\highlight0 #    start program  = "/bin/mount /data"\cf1\highlight2 
\par \cf0\highlight0 #    stop program  = "/bin/umount /data"\cf1\highlight2 
\par \cf0\highlight0 #    if failed permission 660 then unmonitor\cf1\highlight2 
\par \cf0\highlight0 #    if failed uid "root" then unmonitor\cf1\highlight2 
\par \cf0\highlight0 #    if failed gid "disk" then unmonitor\cf1\highlight2 
\par \cf0\highlight0 #    if space usage > 80% for 5 times within 15 cycles then alert\cf1\highlight2 
\par \cf0\highlight0 #    if space usage > 99% then stop\cf1\highlight2 
\par \cf0\highlight0 #    if inode usage > 30000 then alert\cf1\highlight2 
\par \cf0\highlight0 #    if inode usage > 99% then stop\cf1\highlight2 
\par \cf0\highlight0 #    if read rate > 1 MB/s for 5 cycles then alert\cf1\highlight2 
\par \cf0\highlight0 #    if read rate > 500 operations/s for 5 cycles then alert\cf1\highlight2 
\par \cf0\highlight0 #    if write rate > 1 MB/s for 5 cycles then alert\cf1\highlight2 
\par \cf0\highlight0 #    if write rate > 500 operations/s for 5 cycles then alert\cf1\highlight2 
\par \cf0\highlight0 #    if service time > 10 milliseconds for 3 times within 5 cycles then alert\cf1\highlight2 
\par \cf0\highlight0 #    group server\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Check a file's timestamp. In this example, we test if a file is older\cf1\highlight2 
\par \cf0\highlight0 ## than 15 minutes and assume something is wrong if its not updated. Also,\cf1\highlight2 
\par \cf0\highlight0 ## if the file size exceed a given limit, execute a script\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #  check file database with path /data/mydatabase.db\cf1\highlight2 
\par \cf0\highlight0 #    if failed permission 700 then alert\cf1\highlight2 
\par \cf0\highlight0 #    if failed uid "data" then alert\cf1\highlight2 
\par \cf0\highlight0 #    if failed gid "data" then alert\cf1\highlight2 
\par \cf0\highlight0 #    if timestamp > 15 minutes then alert\cf1\highlight2 
\par \cf0\highlight0 #    if size > 100 MB then exec "/my/cleanup/script" as uid dba and gid dba\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Check directory permission, uid and gid.  An event is triggered if the\cf1\highlight2 
\par \cf0\highlight0 ## directory does not belong to the user with uid 0 and gid 0.  In addition,\cf1\highlight2 
\par \cf0\highlight0 ## the permissions have to match the octal description of 755 (see chmod(1)).\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #  check directory bin with path /bin\cf1\highlight2 
\par \cf0\highlight0 #    if failed permission 755 then unmonitor\cf1\highlight2 
\par \cf0\highlight0 #    if failed uid 0 then unmonitor\cf1\highlight2 
\par \cf0\highlight0 #    if failed gid 0 then unmonitor\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Check a remote host availability by issuing a ping test and check the\cf1\highlight2 
\par \cf0\highlight0 ## content of a response from a web server. Up to three pings are sent and\cf1\highlight2 
\par \cf0\highlight0 ## connection to a port and an application level network check is performed.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #  check host myserver with address 192.168.1.1\cf1\highlight2 
\par \cf0\highlight0 #    if failed ping then alert\cf1\highlight2 
\par \cf0\highlight0 #    if failed port 3306 protocol mysql with timeout 15 seconds then alert\cf1\highlight2 
\par \cf0\highlight0 #    if failed port 80 protocol http\cf1\highlight2 
\par \cf0\highlight0 #       and request /some/path with content = "a string"\cf1\highlight2 
\par \cf0\highlight0 #    then alert\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Check a network link status (up/down), link capacity changes, saturation\cf1\highlight2 
\par \cf0\highlight0 ## and bandwidth usage.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #  check network public with interface eth0\cf1\highlight2 
\par \cf0\highlight0 #    if link down then alert\cf1\highlight2 
\par \cf0\highlight0 #    if changed link then alert\cf1\highlight2 
\par \cf0\highlight0 #    if saturation > 90% then alert\cf1\highlight2 
\par \cf0\highlight0 #    if download > 10 MB/s then alert\cf1\highlight2 
\par \cf0\highlight0 #    if total uploaded > 1 GB in last hour then alert\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ## Check custom program status output.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #  check program myscript with path /usr/local/bin/myscript.sh\cf1\highlight2 
\par \cf0\highlight0 #    if status != 0 then alert\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 ###############################################################################\cf1\highlight2 
\par \cf0\highlight0 ## Includes\cf1\highlight2 
\par \cf0\highlight0 ###############################################################################\cf1\highlight2 
\par \cf0\highlight0 ##\cf1\highlight2 
\par \cf0\highlight0 ## It is possible to include additional configuration parts from other files or\cf1\highlight2 
\par \cf0\highlight0 ## directories.\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 #  include /etc/monit.d/*\cf1\highlight2 
\par \cf0\highlight0 include /etc/monit/conf.d/*\cf1\highlight2 
\par \cf0\highlight0 include /etc/monit/conf-enabled/*\cf1\highlight2 
\par \cf0\highlight0 #\cf1\highlight2 
\par \cf0\highlight0 root@ip-172-31-6-26:/etc/monit#\cf1\highlight2 
\par \pard\cf0\highlight0\f2\fs16 
\par }
 